/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 263.0, "minX": 0.0, "maxY": 7300.0, "series": [{"data": [[0.0, 268.0], [0.1, 270.0], [0.2, 272.0], [0.3, 274.0], [0.4, 275.0], [0.5, 276.0], [0.6, 277.0], [0.7, 277.0], [0.8, 278.0], [0.9, 278.0], [1.0, 279.0], [1.1, 279.0], [1.2, 279.0], [1.3, 280.0], [1.4, 280.0], [1.5, 280.0], [1.6, 280.0], [1.7, 281.0], [1.8, 281.0], [1.9, 281.0], [2.0, 282.0], [2.1, 282.0], [2.2, 282.0], [2.3, 282.0], [2.4, 283.0], [2.5, 283.0], [2.6, 283.0], [2.7, 283.0], [2.8, 283.0], [2.9, 283.0], [3.0, 283.0], [3.1, 284.0], [3.2, 284.0], [3.3, 284.0], [3.4, 284.0], [3.5, 285.0], [3.6, 285.0], [3.7, 285.0], [3.8, 285.0], [3.9, 285.0], [4.0, 286.0], [4.1, 286.0], [4.2, 286.0], [4.3, 286.0], [4.4, 286.0], [4.5, 286.0], [4.6, 286.0], [4.7, 286.0], [4.8, 286.0], [4.9, 287.0], [5.0, 287.0], [5.1, 287.0], [5.2, 287.0], [5.3, 287.0], [5.4, 287.0], [5.5, 287.0], [5.6, 287.0], [5.7, 287.0], [5.8, 287.0], [5.9, 287.0], [6.0, 287.0], [6.1, 288.0], [6.2, 288.0], [6.3, 288.0], [6.4, 288.0], [6.5, 288.0], [6.6, 288.0], [6.7, 288.0], [6.8, 288.0], [6.9, 288.0], [7.0, 289.0], [7.1, 289.0], [7.2, 289.0], [7.3, 289.0], [7.4, 289.0], [7.5, 289.0], [7.6, 289.0], [7.7, 289.0], [7.8, 289.0], [7.9, 289.0], [8.0, 289.0], [8.1, 289.0], [8.2, 289.0], [8.3, 290.0], [8.4, 290.0], [8.5, 290.0], [8.6, 290.0], [8.7, 290.0], [8.8, 290.0], [8.9, 290.0], [9.0, 290.0], [9.1, 290.0], [9.2, 290.0], [9.3, 290.0], [9.4, 290.0], [9.5, 290.0], [9.6, 290.0], [9.7, 290.0], [9.8, 290.0], [9.9, 291.0], [10.0, 291.0], [10.1, 291.0], [10.2, 291.0], [10.3, 291.0], [10.4, 291.0], [10.5, 291.0], [10.6, 291.0], [10.7, 291.0], [10.8, 291.0], [10.9, 291.0], [11.0, 291.0], [11.1, 291.0], [11.2, 291.0], [11.3, 292.0], [11.4, 292.0], [11.5, 292.0], [11.6, 292.0], [11.7, 292.0], [11.8, 292.0], [11.9, 292.0], [12.0, 292.0], [12.1, 292.0], [12.2, 292.0], [12.3, 292.0], [12.4, 292.0], [12.5, 292.0], [12.6, 292.0], [12.7, 293.0], [12.8, 293.0], [12.9, 293.0], [13.0, 293.0], [13.1, 293.0], [13.2, 293.0], [13.3, 293.0], [13.4, 293.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 293.0], [13.9, 293.0], [14.0, 293.0], [14.1, 293.0], [14.2, 293.0], [14.3, 293.0], [14.4, 293.0], [14.5, 293.0], [14.6, 293.0], [14.7, 294.0], [14.8, 294.0], [14.9, 294.0], [15.0, 294.0], [15.1, 294.0], [15.2, 294.0], [15.3, 294.0], [15.4, 294.0], [15.5, 294.0], [15.6, 294.0], [15.7, 294.0], [15.8, 294.0], [15.9, 294.0], [16.0, 294.0], [16.1, 294.0], [16.2, 294.0], [16.3, 295.0], [16.4, 295.0], [16.5, 295.0], [16.6, 295.0], [16.7, 295.0], [16.8, 295.0], [16.9, 295.0], [17.0, 295.0], [17.1, 295.0], [17.2, 295.0], [17.3, 295.0], [17.4, 295.0], [17.5, 295.0], [17.6, 295.0], [17.7, 295.0], [17.8, 295.0], [17.9, 295.0], [18.0, 295.0], [18.1, 295.0], [18.2, 296.0], [18.3, 296.0], [18.4, 296.0], [18.5, 296.0], [18.6, 296.0], [18.7, 296.0], [18.8, 296.0], [18.9, 296.0], [19.0, 296.0], [19.1, 296.0], [19.2, 296.0], [19.3, 296.0], [19.4, 296.0], [19.5, 296.0], [19.6, 296.0], [19.7, 296.0], [19.8, 296.0], [19.9, 296.0], [20.0, 296.0], [20.1, 296.0], [20.2, 296.0], [20.3, 297.0], [20.4, 297.0], [20.5, 297.0], [20.6, 297.0], [20.7, 297.0], [20.8, 297.0], [20.9, 297.0], [21.0, 297.0], [21.1, 297.0], [21.2, 297.0], [21.3, 297.0], [21.4, 297.0], [21.5, 297.0], [21.6, 297.0], [21.7, 297.0], [21.8, 297.0], [21.9, 297.0], [22.0, 298.0], [22.1, 298.0], [22.2, 298.0], [22.3, 298.0], [22.4, 298.0], [22.5, 298.0], [22.6, 298.0], [22.7, 298.0], [22.8, 298.0], [22.9, 298.0], [23.0, 298.0], [23.1, 298.0], [23.2, 298.0], [23.3, 298.0], [23.4, 298.0], [23.5, 298.0], [23.6, 298.0], [23.7, 298.0], [23.8, 298.0], [23.9, 299.0], [24.0, 299.0], [24.1, 299.0], [24.2, 299.0], [24.3, 299.0], [24.4, 299.0], [24.5, 299.0], [24.6, 299.0], [24.7, 299.0], [24.8, 299.0], [24.9, 299.0], [25.0, 299.0], [25.1, 299.0], [25.2, 299.0], [25.3, 299.0], [25.4, 299.0], [25.5, 299.0], [25.6, 299.0], [25.7, 299.0], [25.8, 299.0], [25.9, 299.0], [26.0, 299.0], [26.1, 300.0], [26.2, 300.0], [26.3, 300.0], [26.4, 300.0], [26.5, 300.0], [26.6, 300.0], [26.7, 300.0], [26.8, 300.0], [26.9, 300.0], [27.0, 300.0], [27.1, 300.0], [27.2, 300.0], [27.3, 300.0], [27.4, 300.0], [27.5, 300.0], [27.6, 300.0], [27.7, 300.0], [27.8, 300.0], [27.9, 301.0], [28.0, 301.0], [28.1, 301.0], [28.2, 301.0], [28.3, 301.0], [28.4, 301.0], [28.5, 301.0], [28.6, 301.0], [28.7, 301.0], [28.8, 301.0], [28.9, 301.0], [29.0, 301.0], [29.1, 301.0], [29.2, 301.0], [29.3, 301.0], [29.4, 301.0], [29.5, 301.0], [29.6, 301.0], [29.7, 301.0], [29.8, 301.0], [29.9, 301.0], [30.0, 301.0], [30.1, 302.0], [30.2, 302.0], [30.3, 302.0], [30.4, 302.0], [30.5, 302.0], [30.6, 302.0], [30.7, 302.0], [30.8, 302.0], [30.9, 302.0], [31.0, 302.0], [31.1, 302.0], [31.2, 302.0], [31.3, 302.0], [31.4, 302.0], [31.5, 302.0], [31.6, 302.0], [31.7, 302.0], [31.8, 302.0], [31.9, 302.0], [32.0, 302.0], [32.1, 302.0], [32.2, 302.0], [32.3, 302.0], [32.4, 302.0], [32.5, 302.0], [32.6, 303.0], [32.7, 303.0], [32.8, 303.0], [32.9, 303.0], [33.0, 303.0], [33.1, 303.0], [33.2, 303.0], [33.3, 303.0], [33.4, 303.0], [33.5, 303.0], [33.6, 303.0], [33.7, 303.0], [33.8, 303.0], [33.9, 303.0], [34.0, 303.0], [34.1, 303.0], [34.2, 303.0], [34.3, 303.0], [34.4, 303.0], [34.5, 303.0], [34.6, 303.0], [34.7, 304.0], [34.8, 304.0], [34.9, 304.0], [35.0, 304.0], [35.1, 304.0], [35.2, 304.0], [35.3, 304.0], [35.4, 304.0], [35.5, 304.0], [35.6, 304.0], [35.7, 304.0], [35.8, 304.0], [35.9, 304.0], [36.0, 304.0], [36.1, 304.0], [36.2, 304.0], [36.3, 304.0], [36.4, 304.0], [36.5, 304.0], [36.6, 304.0], [36.7, 304.0], [36.8, 304.0], [36.9, 304.0], [37.0, 305.0], [37.1, 305.0], [37.2, 305.0], [37.3, 305.0], [37.4, 305.0], [37.5, 305.0], [37.6, 305.0], [37.7, 305.0], [37.8, 305.0], [37.9, 305.0], [38.0, 305.0], [38.1, 305.0], [38.2, 305.0], [38.3, 305.0], [38.4, 305.0], [38.5, 305.0], [38.6, 306.0], [38.7, 306.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 306.0], [39.2, 306.0], [39.3, 306.0], [39.4, 306.0], [39.5, 306.0], [39.6, 306.0], [39.7, 306.0], [39.8, 306.0], [39.9, 306.0], [40.0, 306.0], [40.1, 306.0], [40.2, 306.0], [40.3, 306.0], [40.4, 306.0], [40.5, 306.0], [40.6, 307.0], [40.7, 307.0], [40.8, 307.0], [40.9, 307.0], [41.0, 307.0], [41.1, 307.0], [41.2, 307.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 307.0], [41.9, 307.0], [42.0, 307.0], [42.1, 307.0], [42.2, 307.0], [42.3, 307.0], [42.4, 307.0], [42.5, 308.0], [42.6, 308.0], [42.7, 308.0], [42.8, 308.0], [42.9, 308.0], [43.0, 308.0], [43.1, 308.0], [43.2, 308.0], [43.3, 308.0], [43.4, 308.0], [43.5, 308.0], [43.6, 308.0], [43.7, 308.0], [43.8, 308.0], [43.9, 308.0], [44.0, 308.0], [44.1, 308.0], [44.2, 308.0], [44.3, 308.0], [44.4, 308.0], [44.5, 308.0], [44.6, 309.0], [44.7, 309.0], [44.8, 309.0], [44.9, 309.0], [45.0, 309.0], [45.1, 309.0], [45.2, 309.0], [45.3, 309.0], [45.4, 309.0], [45.5, 309.0], [45.6, 309.0], [45.7, 309.0], [45.8, 309.0], [45.9, 309.0], [46.0, 309.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 310.0], [46.6, 310.0], [46.7, 310.0], [46.8, 310.0], [46.9, 310.0], [47.0, 310.0], [47.1, 310.0], [47.2, 310.0], [47.3, 310.0], [47.4, 310.0], [47.5, 310.0], [47.6, 310.0], [47.7, 310.0], [47.8, 310.0], [47.9, 310.0], [48.0, 310.0], [48.1, 310.0], [48.2, 310.0], [48.3, 310.0], [48.4, 310.0], [48.5, 310.0], [48.6, 310.0], [48.7, 310.0], [48.8, 310.0], [48.9, 310.0], [49.0, 310.0], [49.1, 310.0], [49.2, 311.0], [49.3, 311.0], [49.4, 311.0], [49.5, 311.0], [49.6, 311.0], [49.7, 311.0], [49.8, 311.0], [49.9, 311.0], [50.0, 311.0], [50.1, 311.0], [50.2, 311.0], [50.3, 311.0], [50.4, 311.0], [50.5, 311.0], [50.6, 311.0], [50.7, 311.0], [50.8, 311.0], [50.9, 311.0], [51.0, 311.0], [51.1, 311.0], [51.2, 311.0], [51.3, 311.0], [51.4, 312.0], [51.5, 312.0], [51.6, 312.0], [51.7, 312.0], [51.8, 312.0], [51.9, 312.0], [52.0, 312.0], [52.1, 312.0], [52.2, 312.0], [52.3, 312.0], [52.4, 312.0], [52.5, 312.0], [52.6, 312.0], [52.7, 312.0], [52.8, 312.0], [52.9, 312.0], [53.0, 312.0], [53.1, 312.0], [53.2, 312.0], [53.3, 312.0], [53.4, 312.0], [53.5, 313.0], [53.6, 313.0], [53.7, 313.0], [53.8, 313.0], [53.9, 313.0], [54.0, 313.0], [54.1, 313.0], [54.2, 313.0], [54.3, 313.0], [54.4, 313.0], [54.5, 313.0], [54.6, 313.0], [54.7, 313.0], [54.8, 313.0], [54.9, 313.0], [55.0, 313.0], [55.1, 313.0], [55.2, 313.0], [55.3, 313.0], [55.4, 313.0], [55.5, 313.0], [55.6, 314.0], [55.7, 314.0], [55.8, 314.0], [55.9, 314.0], [56.0, 314.0], [56.1, 314.0], [56.2, 314.0], [56.3, 314.0], [56.4, 314.0], [56.5, 314.0], [56.6, 314.0], [56.7, 314.0], [56.8, 314.0], [56.9, 314.0], [57.0, 314.0], [57.1, 314.0], [57.2, 314.0], [57.3, 314.0], [57.4, 314.0], [57.5, 314.0], [57.6, 314.0], [57.7, 315.0], [57.8, 315.0], [57.9, 315.0], [58.0, 315.0], [58.1, 315.0], [58.2, 315.0], [58.3, 315.0], [58.4, 315.0], [58.5, 315.0], [58.6, 315.0], [58.7, 315.0], [58.8, 315.0], [58.9, 315.0], [59.0, 315.0], [59.1, 315.0], [59.2, 315.0], [59.3, 315.0], [59.4, 315.0], [59.5, 315.0], [59.6, 315.0], [59.7, 315.0], [59.8, 315.0], [59.9, 315.0], [60.0, 315.0], [60.1, 316.0], [60.2, 316.0], [60.3, 316.0], [60.4, 316.0], [60.5, 316.0], [60.6, 316.0], [60.7, 316.0], [60.8, 316.0], [60.9, 316.0], [61.0, 316.0], [61.1, 316.0], [61.2, 316.0], [61.3, 316.0], [61.4, 316.0], [61.5, 316.0], [61.6, 316.0], [61.7, 316.0], [61.8, 316.0], [61.9, 316.0], [62.0, 316.0], [62.1, 317.0], [62.2, 317.0], [62.3, 317.0], [62.4, 317.0], [62.5, 317.0], [62.6, 317.0], [62.7, 317.0], [62.8, 317.0], [62.9, 317.0], [63.0, 317.0], [63.1, 317.0], [63.2, 317.0], [63.3, 317.0], [63.4, 317.0], [63.5, 317.0], [63.6, 317.0], [63.7, 317.0], [63.8, 317.0], [63.9, 317.0], [64.0, 317.0], [64.1, 318.0], [64.2, 318.0], [64.3, 318.0], [64.4, 318.0], [64.5, 318.0], [64.6, 318.0], [64.7, 318.0], [64.8, 318.0], [64.9, 318.0], [65.0, 318.0], [65.1, 318.0], [65.2, 318.0], [65.3, 318.0], [65.4, 318.0], [65.5, 318.0], [65.6, 318.0], [65.7, 318.0], [65.8, 318.0], [65.9, 318.0], [66.0, 318.0], [66.1, 318.0], [66.2, 319.0], [66.3, 319.0], [66.4, 319.0], [66.5, 319.0], [66.6, 319.0], [66.7, 319.0], [66.8, 319.0], [66.9, 319.0], [67.0, 319.0], [67.1, 319.0], [67.2, 319.0], [67.3, 319.0], [67.4, 319.0], [67.5, 319.0], [67.6, 319.0], [67.7, 320.0], [67.8, 320.0], [67.9, 320.0], [68.0, 320.0], [68.1, 320.0], [68.2, 320.0], [68.3, 320.0], [68.4, 320.0], [68.5, 320.0], [68.6, 320.0], [68.7, 320.0], [68.8, 320.0], [68.9, 320.0], [69.0, 320.0], [69.1, 320.0], [69.2, 320.0], [69.3, 320.0], [69.4, 320.0], [69.5, 320.0], [69.6, 320.0], [69.7, 320.0], [69.8, 321.0], [69.9, 321.0], [70.0, 321.0], [70.1, 321.0], [70.2, 321.0], [70.3, 321.0], [70.4, 321.0], [70.5, 321.0], [70.6, 321.0], [70.7, 321.0], [70.8, 321.0], [70.9, 321.0], [71.0, 321.0], [71.1, 321.0], [71.2, 321.0], [71.3, 321.0], [71.4, 321.0], [71.5, 322.0], [71.6, 322.0], [71.7, 322.0], [71.8, 322.0], [71.9, 322.0], [72.0, 322.0], [72.1, 322.0], [72.2, 322.0], [72.3, 322.0], [72.4, 322.0], [72.5, 322.0], [72.6, 322.0], [72.7, 322.0], [72.8, 322.0], [72.9, 322.0], [73.0, 322.0], [73.1, 323.0], [73.2, 323.0], [73.3, 323.0], [73.4, 323.0], [73.5, 323.0], [73.6, 323.0], [73.7, 323.0], [73.8, 323.0], [73.9, 323.0], [74.0, 323.0], [74.1, 323.0], [74.2, 323.0], [74.3, 324.0], [74.4, 324.0], [74.5, 324.0], [74.6, 324.0], [74.7, 324.0], [74.8, 324.0], [74.9, 324.0], [75.0, 324.0], [75.1, 324.0], [75.2, 324.0], [75.3, 324.0], [75.4, 325.0], [75.5, 325.0], [75.6, 325.0], [75.7, 325.0], [75.8, 325.0], [75.9, 325.0], [76.0, 325.0], [76.1, 325.0], [76.2, 325.0], [76.3, 325.0], [76.4, 325.0], [76.5, 325.0], [76.6, 325.0], [76.7, 326.0], [76.8, 326.0], [76.9, 326.0], [77.0, 326.0], [77.1, 326.0], [77.2, 326.0], [77.3, 326.0], [77.4, 326.0], [77.5, 326.0], [77.6, 326.0], [77.7, 326.0], [77.8, 326.0], [77.9, 326.0], [78.0, 326.0], [78.1, 327.0], [78.2, 327.0], [78.3, 327.0], [78.4, 327.0], [78.5, 327.0], [78.6, 327.0], [78.7, 327.0], [78.8, 327.0], [78.9, 328.0], [79.0, 328.0], [79.1, 328.0], [79.2, 328.0], [79.3, 328.0], [79.4, 328.0], [79.5, 328.0], [79.6, 328.0], [79.7, 328.0], [79.8, 328.0], [79.9, 329.0], [80.0, 329.0], [80.1, 329.0], [80.2, 329.0], [80.3, 329.0], [80.4, 329.0], [80.5, 329.0], [80.6, 330.0], [80.7, 330.0], [80.8, 330.0], [80.9, 330.0], [81.0, 330.0], [81.1, 330.0], [81.2, 330.0], [81.3, 330.0], [81.4, 330.0], [81.5, 330.0], [81.6, 331.0], [81.7, 331.0], [81.8, 331.0], [81.9, 331.0], [82.0, 331.0], [82.1, 331.0], [82.2, 331.0], [82.3, 331.0], [82.4, 331.0], [82.5, 331.0], [82.6, 331.0], [82.7, 331.0], [82.8, 332.0], [82.9, 332.0], [83.0, 332.0], [83.1, 332.0], [83.2, 332.0], [83.3, 333.0], [83.4, 333.0], [83.5, 333.0], [83.6, 333.0], [83.7, 333.0], [83.8, 333.0], [83.9, 334.0], [84.0, 334.0], [84.1, 334.0], [84.2, 334.0], [84.3, 334.0], [84.4, 334.0], [84.5, 334.0], [84.6, 334.0], [84.7, 335.0], [84.8, 335.0], [84.9, 335.0], [85.0, 335.0], [85.1, 335.0], [85.2, 336.0], [85.3, 336.0], [85.4, 336.0], [85.5, 336.0], [85.6, 336.0], [85.7, 337.0], [85.8, 337.0], [85.9, 337.0], [86.0, 337.0], [86.1, 337.0], [86.2, 337.0], [86.3, 337.0], [86.4, 338.0], [86.5, 338.0], [86.6, 338.0], [86.7, 338.0], [86.8, 338.0], [86.9, 339.0], [87.0, 339.0], [87.1, 339.0], [87.2, 339.0], [87.3, 339.0], [87.4, 340.0], [87.5, 340.0], [87.6, 340.0], [87.7, 340.0], [87.8, 341.0], [87.9, 341.0], [88.0, 341.0], [88.1, 341.0], [88.2, 342.0], [88.3, 343.0], [88.4, 343.0], [88.5, 343.0], [88.6, 343.0], [88.7, 344.0], [88.8, 344.0], [88.9, 344.0], [89.0, 344.0], [89.1, 344.0], [89.2, 345.0], [89.3, 345.0], [89.4, 345.0], [89.5, 345.0], [89.6, 345.0], [89.7, 346.0], [89.8, 347.0], [89.9, 347.0], [90.0, 348.0], [90.1, 348.0], [90.2, 348.0], [90.3, 348.0], [90.4, 349.0], [90.5, 349.0], [90.6, 350.0], [90.7, 350.0], [90.8, 350.0], [90.9, 351.0], [91.0, 352.0], [91.1, 352.0], [91.2, 352.0], [91.3, 353.0], [91.4, 353.0], [91.5, 354.0], [91.6, 355.0], [91.7, 355.0], [91.8, 355.0], [91.9, 356.0], [92.0, 357.0], [92.1, 358.0], [92.2, 358.0], [92.3, 358.0], [92.4, 359.0], [92.5, 359.0], [92.6, 360.0], [92.7, 360.0], [92.8, 361.0], [92.9, 362.0], [93.0, 362.0], [93.1, 363.0], [93.2, 363.0], [93.3, 364.0], [93.4, 365.0], [93.5, 366.0], [93.6, 367.0], [93.7, 368.0], [93.8, 369.0], [93.9, 370.0], [94.0, 371.0], [94.1, 373.0], [94.2, 373.0], [94.3, 375.0], [94.4, 376.0], [94.5, 377.0], [94.6, 378.0], [94.7, 379.0], [94.8, 380.0], [94.9, 381.0], [95.0, 382.0], [95.1, 383.0], [95.2, 384.0], [95.3, 385.0], [95.4, 388.0], [95.5, 388.0], [95.6, 389.0], [95.7, 390.0], [95.8, 392.0], [95.9, 393.0], [96.0, 394.0], [96.1, 395.0], [96.2, 396.0], [96.3, 397.0], [96.4, 399.0], [96.5, 400.0], [96.6, 402.0], [96.7, 403.0], [96.8, 405.0], [96.9, 406.0], [97.0, 409.0], [97.1, 411.0], [97.2, 413.0], [97.3, 417.0], [97.4, 422.0], [97.5, 426.0], [97.6, 428.0], [97.7, 434.0], [97.8, 438.0], [97.9, 442.0], [98.0, 445.0], [98.1, 459.0], [98.2, 472.0], [98.3, 485.0], [98.4, 487.0], [98.5, 500.0], [98.6, 580.0], [98.7, 712.0], [98.8, 756.0], [98.9, 767.0], [99.0, 790.0], [99.1, 820.0], [99.2, 858.0], [99.3, 887.0], [99.4, 945.0], [99.5, 959.0], [99.6, 990.0], [99.7, 1012.0], [99.8, 1057.0], [99.9, 1185.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[0.0, 270.0], [0.1, 272.0], [0.2, 274.0], [0.3, 274.0], [0.4, 275.0], [0.5, 276.0], [0.6, 276.0], [0.7, 277.0], [0.8, 277.0], [0.9, 278.0], [1.0, 278.0], [1.1, 279.0], [1.2, 279.0], [1.3, 279.0], [1.4, 280.0], [1.5, 280.0], [1.6, 280.0], [1.7, 281.0], [1.8, 281.0], [1.9, 281.0], [2.0, 281.0], [2.1, 282.0], [2.2, 282.0], [2.3, 282.0], [2.4, 282.0], [2.5, 283.0], [2.6, 283.0], [2.7, 283.0], [2.8, 283.0], [2.9, 283.0], [3.0, 283.0], [3.1, 284.0], [3.2, 284.0], [3.3, 284.0], [3.4, 284.0], [3.5, 284.0], [3.6, 284.0], [3.7, 284.0], [3.8, 285.0], [3.9, 285.0], [4.0, 285.0], [4.1, 285.0], [4.2, 285.0], [4.3, 285.0], [4.4, 285.0], [4.5, 285.0], [4.6, 285.0], [4.7, 286.0], [4.8, 286.0], [4.9, 286.0], [5.0, 286.0], [5.1, 286.0], [5.2, 286.0], [5.3, 286.0], [5.4, 286.0], [5.5, 286.0], [5.6, 287.0], [5.7, 287.0], [5.8, 287.0], [5.9, 287.0], [6.0, 287.0], [6.1, 287.0], [6.2, 287.0], [6.3, 287.0], [6.4, 288.0], [6.5, 288.0], [6.6, 288.0], [6.7, 288.0], [6.8, 288.0], [6.9, 288.0], [7.0, 288.0], [7.1, 288.0], [7.2, 288.0], [7.3, 288.0], [7.4, 288.0], [7.5, 289.0], [7.6, 289.0], [7.7, 289.0], [7.8, 289.0], [7.9, 289.0], [8.0, 289.0], [8.1, 289.0], [8.2, 289.0], [8.3, 289.0], [8.4, 289.0], [8.5, 290.0], [8.6, 290.0], [8.7, 290.0], [8.8, 290.0], [8.9, 290.0], [9.0, 290.0], [9.1, 290.0], [9.2, 290.0], [9.3, 290.0], [9.4, 290.0], [9.5, 290.0], [9.6, 290.0], [9.7, 290.0], [9.8, 291.0], [9.9, 291.0], [10.0, 291.0], [10.1, 291.0], [10.2, 291.0], [10.3, 291.0], [10.4, 291.0], [10.5, 291.0], [10.6, 291.0], [10.7, 291.0], [10.8, 291.0], [10.9, 291.0], [11.0, 292.0], [11.1, 292.0], [11.2, 292.0], [11.3, 292.0], [11.4, 292.0], [11.5, 292.0], [11.6, 292.0], [11.7, 292.0], [11.8, 292.0], [11.9, 292.0], [12.0, 292.0], [12.1, 292.0], [12.2, 292.0], [12.3, 292.0], [12.4, 293.0], [12.5, 293.0], [12.6, 293.0], [12.7, 293.0], [12.8, 293.0], [12.9, 293.0], [13.0, 293.0], [13.1, 293.0], [13.2, 293.0], [13.3, 293.0], [13.4, 293.0], [13.5, 293.0], [13.6, 293.0], [13.7, 293.0], [13.8, 293.0], [13.9, 293.0], [14.0, 294.0], [14.1, 294.0], [14.2, 294.0], [14.3, 294.0], [14.4, 294.0], [14.5, 294.0], [14.6, 294.0], [14.7, 294.0], [14.8, 294.0], [14.9, 294.0], [15.0, 294.0], [15.1, 294.0], [15.2, 294.0], [15.3, 294.0], [15.4, 294.0], [15.5, 294.0], [15.6, 294.0], [15.7, 295.0], [15.8, 295.0], [15.9, 295.0], [16.0, 295.0], [16.1, 295.0], [16.2, 295.0], [16.3, 295.0], [16.4, 295.0], [16.5, 295.0], [16.6, 295.0], [16.7, 295.0], [16.8, 295.0], [16.9, 295.0], [17.0, 295.0], [17.1, 295.0], [17.2, 295.0], [17.3, 295.0], [17.4, 295.0], [17.5, 296.0], [17.6, 296.0], [17.7, 296.0], [17.8, 296.0], [17.9, 296.0], [18.0, 296.0], [18.1, 296.0], [18.2, 296.0], [18.3, 296.0], [18.4, 296.0], [18.5, 296.0], [18.6, 296.0], [18.7, 296.0], [18.8, 296.0], [18.9, 296.0], [19.0, 296.0], [19.1, 296.0], [19.2, 296.0], [19.3, 297.0], [19.4, 297.0], [19.5, 297.0], [19.6, 297.0], [19.7, 297.0], [19.8, 297.0], [19.9, 297.0], [20.0, 297.0], [20.1, 297.0], [20.2, 297.0], [20.3, 297.0], [20.4, 297.0], [20.5, 297.0], [20.6, 297.0], [20.7, 297.0], [20.8, 297.0], [20.9, 297.0], [21.0, 297.0], [21.1, 297.0], [21.2, 298.0], [21.3, 298.0], [21.4, 298.0], [21.5, 298.0], [21.6, 298.0], [21.7, 298.0], [21.8, 298.0], [21.9, 298.0], [22.0, 298.0], [22.1, 298.0], [22.2, 298.0], [22.3, 298.0], [22.4, 298.0], [22.5, 298.0], [22.6, 298.0], [22.7, 298.0], [22.8, 298.0], [22.9, 298.0], [23.0, 298.0], [23.1, 298.0], [23.2, 299.0], [23.3, 299.0], [23.4, 299.0], [23.5, 299.0], [23.6, 299.0], [23.7, 299.0], [23.8, 299.0], [23.9, 299.0], [24.0, 299.0], [24.1, 299.0], [24.2, 299.0], [24.3, 299.0], [24.4, 299.0], [24.5, 299.0], [24.6, 299.0], [24.7, 299.0], [24.8, 299.0], [24.9, 299.0], [25.0, 299.0], [25.1, 299.0], [25.2, 300.0], [25.3, 300.0], [25.4, 300.0], [25.5, 300.0], [25.6, 300.0], [25.7, 300.0], [25.8, 300.0], [25.9, 300.0], [26.0, 300.0], [26.1, 300.0], [26.2, 300.0], [26.3, 300.0], [26.4, 300.0], [26.5, 300.0], [26.6, 300.0], [26.7, 300.0], [26.8, 300.0], [26.9, 300.0], [27.0, 300.0], [27.1, 300.0], [27.2, 300.0], [27.3, 301.0], [27.4, 301.0], [27.5, 301.0], [27.6, 301.0], [27.7, 301.0], [27.8, 301.0], [27.9, 301.0], [28.0, 301.0], [28.1, 301.0], [28.2, 301.0], [28.3, 301.0], [28.4, 301.0], [28.5, 301.0], [28.6, 301.0], [28.7, 301.0], [28.8, 301.0], [28.9, 301.0], [29.0, 301.0], [29.1, 301.0], [29.2, 301.0], [29.3, 301.0], [29.4, 302.0], [29.5, 302.0], [29.6, 302.0], [29.7, 302.0], [29.8, 302.0], [29.9, 302.0], [30.0, 302.0], [30.1, 302.0], [30.2, 302.0], [30.3, 302.0], [30.4, 302.0], [30.5, 302.0], [30.6, 302.0], [30.7, 302.0], [30.8, 302.0], [30.9, 302.0], [31.0, 302.0], [31.1, 302.0], [31.2, 302.0], [31.3, 302.0], [31.4, 302.0], [31.5, 303.0], [31.6, 303.0], [31.7, 303.0], [31.8, 303.0], [31.9, 303.0], [32.0, 303.0], [32.1, 303.0], [32.2, 303.0], [32.3, 303.0], [32.4, 303.0], [32.5, 303.0], [32.6, 303.0], [32.7, 303.0], [32.8, 303.0], [32.9, 303.0], [33.0, 303.0], [33.1, 303.0], [33.2, 303.0], [33.3, 303.0], [33.4, 303.0], [33.5, 303.0], [33.6, 304.0], [33.7, 304.0], [33.8, 304.0], [33.9, 304.0], [34.0, 304.0], [34.1, 304.0], [34.2, 304.0], [34.3, 304.0], [34.4, 304.0], [34.5, 304.0], [34.6, 304.0], [34.7, 304.0], [34.8, 304.0], [34.9, 304.0], [35.0, 304.0], [35.1, 304.0], [35.2, 304.0], [35.3, 304.0], [35.4, 304.0], [35.5, 304.0], [35.6, 304.0], [35.7, 304.0], [35.8, 304.0], [35.9, 305.0], [36.0, 305.0], [36.1, 305.0], [36.2, 305.0], [36.3, 305.0], [36.4, 305.0], [36.5, 305.0], [36.6, 305.0], [36.7, 305.0], [36.8, 305.0], [36.9, 305.0], [37.0, 305.0], [37.1, 305.0], [37.2, 305.0], [37.3, 305.0], [37.4, 305.0], [37.5, 305.0], [37.6, 305.0], [37.7, 305.0], [37.8, 305.0], [37.9, 305.0], [38.0, 305.0], [38.1, 305.0], [38.2, 305.0], [38.3, 306.0], [38.4, 306.0], [38.5, 306.0], [38.6, 306.0], [38.7, 306.0], [38.8, 306.0], [38.9, 306.0], [39.0, 306.0], [39.1, 306.0], [39.2, 306.0], [39.3, 306.0], [39.4, 306.0], [39.5, 306.0], [39.6, 306.0], [39.7, 306.0], [39.8, 306.0], [39.9, 306.0], [40.0, 306.0], [40.1, 306.0], [40.2, 306.0], [40.3, 306.0], [40.4, 306.0], [40.5, 306.0], [40.6, 306.0], [40.7, 306.0], [40.8, 307.0], [40.9, 307.0], [41.0, 307.0], [41.1, 307.0], [41.2, 307.0], [41.3, 307.0], [41.4, 307.0], [41.5, 307.0], [41.6, 307.0], [41.7, 307.0], [41.8, 307.0], [41.9, 307.0], [42.0, 307.0], [42.1, 307.0], [42.2, 307.0], [42.3, 307.0], [42.4, 307.0], [42.5, 307.0], [42.6, 307.0], [42.7, 308.0], [42.8, 308.0], [42.9, 308.0], [43.0, 308.0], [43.1, 308.0], [43.2, 308.0], [43.3, 308.0], [43.4, 308.0], [43.5, 308.0], [43.6, 308.0], [43.7, 308.0], [43.8, 308.0], [43.9, 308.0], [44.0, 308.0], [44.1, 308.0], [44.2, 308.0], [44.3, 308.0], [44.4, 308.0], [44.5, 308.0], [44.6, 308.0], [44.7, 309.0], [44.8, 309.0], [44.9, 309.0], [45.0, 309.0], [45.1, 309.0], [45.2, 309.0], [45.3, 309.0], [45.4, 309.0], [45.5, 309.0], [45.6, 309.0], [45.7, 309.0], [45.8, 309.0], [45.9, 309.0], [46.0, 309.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 309.0], [46.6, 309.0], [46.7, 309.0], [46.8, 309.0], [46.9, 309.0], [47.0, 310.0], [47.1, 310.0], [47.2, 310.0], [47.3, 310.0], [47.4, 310.0], [47.5, 310.0], [47.6, 310.0], [47.7, 310.0], [47.8, 310.0], [47.9, 310.0], [48.0, 310.0], [48.1, 310.0], [48.2, 310.0], [48.3, 310.0], [48.4, 310.0], [48.5, 310.0], [48.6, 310.0], [48.7, 310.0], [48.8, 310.0], [48.9, 310.0], [49.0, 310.0], [49.1, 310.0], [49.2, 311.0], [49.3, 311.0], [49.4, 311.0], [49.5, 311.0], [49.6, 311.0], [49.7, 311.0], [49.8, 311.0], [49.9, 311.0], [50.0, 311.0], [50.1, 311.0], [50.2, 311.0], [50.3, 311.0], [50.4, 311.0], [50.5, 311.0], [50.6, 311.0], [50.7, 311.0], [50.8, 311.0], [50.9, 311.0], [51.0, 311.0], [51.1, 311.0], [51.2, 312.0], [51.3, 312.0], [51.4, 312.0], [51.5, 312.0], [51.6, 312.0], [51.7, 312.0], [51.8, 312.0], [51.9, 312.0], [52.0, 312.0], [52.1, 312.0], [52.2, 312.0], [52.3, 312.0], [52.4, 312.0], [52.5, 312.0], [52.6, 312.0], [52.7, 312.0], [52.8, 312.0], [52.9, 312.0], [53.0, 312.0], [53.1, 312.0], [53.2, 312.0], [53.3, 312.0], [53.4, 312.0], [53.5, 313.0], [53.6, 313.0], [53.7, 313.0], [53.8, 313.0], [53.9, 313.0], [54.0, 313.0], [54.1, 313.0], [54.2, 313.0], [54.3, 313.0], [54.4, 313.0], [54.5, 313.0], [54.6, 313.0], [54.7, 313.0], [54.8, 313.0], [54.9, 313.0], [55.0, 313.0], [55.1, 313.0], [55.2, 313.0], [55.3, 313.0], [55.4, 313.0], [55.5, 313.0], [55.6, 314.0], [55.7, 314.0], [55.8, 314.0], [55.9, 314.0], [56.0, 314.0], [56.1, 314.0], [56.2, 314.0], [56.3, 314.0], [56.4, 314.0], [56.5, 314.0], [56.6, 314.0], [56.7, 314.0], [56.8, 314.0], [56.9, 314.0], [57.0, 314.0], [57.1, 314.0], [57.2, 314.0], [57.3, 314.0], [57.4, 314.0], [57.5, 314.0], [57.6, 315.0], [57.7, 315.0], [57.8, 315.0], [57.9, 315.0], [58.0, 315.0], [58.1, 315.0], [58.2, 315.0], [58.3, 315.0], [58.4, 315.0], [58.5, 315.0], [58.6, 315.0], [58.7, 315.0], [58.8, 315.0], [58.9, 315.0], [59.0, 315.0], [59.1, 315.0], [59.2, 315.0], [59.3, 315.0], [59.4, 315.0], [59.5, 315.0], [59.6, 315.0], [59.7, 315.0], [59.8, 316.0], [59.9, 316.0], [60.0, 316.0], [60.1, 316.0], [60.2, 316.0], [60.3, 316.0], [60.4, 316.0], [60.5, 316.0], [60.6, 316.0], [60.7, 316.0], [60.8, 316.0], [60.9, 316.0], [61.0, 316.0], [61.1, 316.0], [61.2, 316.0], [61.3, 316.0], [61.4, 316.0], [61.5, 316.0], [61.6, 316.0], [61.7, 316.0], [61.8, 316.0], [61.9, 316.0], [62.0, 316.0], [62.1, 316.0], [62.2, 317.0], [62.3, 317.0], [62.4, 317.0], [62.5, 317.0], [62.6, 317.0], [62.7, 317.0], [62.8, 317.0], [62.9, 317.0], [63.0, 317.0], [63.1, 317.0], [63.2, 317.0], [63.3, 317.0], [63.4, 317.0], [63.5, 317.0], [63.6, 317.0], [63.7, 317.0], [63.8, 317.0], [63.9, 317.0], [64.0, 317.0], [64.1, 317.0], [64.2, 317.0], [64.3, 317.0], [64.4, 317.0], [64.5, 318.0], [64.6, 318.0], [64.7, 318.0], [64.8, 318.0], [64.9, 318.0], [65.0, 318.0], [65.1, 318.0], [65.2, 318.0], [65.3, 318.0], [65.4, 318.0], [65.5, 318.0], [65.6, 318.0], [65.7, 318.0], [65.8, 318.0], [65.9, 318.0], [66.0, 318.0], [66.1, 319.0], [66.2, 319.0], [66.3, 319.0], [66.4, 319.0], [66.5, 319.0], [66.6, 319.0], [66.7, 319.0], [66.8, 319.0], [66.9, 319.0], [67.0, 319.0], [67.1, 319.0], [67.2, 319.0], [67.3, 319.0], [67.4, 319.0], [67.5, 319.0], [67.6, 319.0], [67.7, 319.0], [67.8, 320.0], [67.9, 320.0], [68.0, 320.0], [68.1, 320.0], [68.2, 320.0], [68.3, 320.0], [68.4, 320.0], [68.5, 320.0], [68.6, 320.0], [68.7, 320.0], [68.8, 320.0], [68.9, 320.0], [69.0, 320.0], [69.1, 320.0], [69.2, 320.0], [69.3, 320.0], [69.4, 320.0], [69.5, 321.0], [69.6, 321.0], [69.7, 321.0], [69.8, 321.0], [69.9, 321.0], [70.0, 321.0], [70.1, 321.0], [70.2, 321.0], [70.3, 321.0], [70.4, 321.0], [70.5, 321.0], [70.6, 321.0], [70.7, 321.0], [70.8, 321.0], [70.9, 321.0], [71.0, 321.0], [71.1, 322.0], [71.2, 322.0], [71.3, 322.0], [71.4, 322.0], [71.5, 322.0], [71.6, 322.0], [71.7, 322.0], [71.8, 322.0], [71.9, 322.0], [72.0, 322.0], [72.1, 322.0], [72.2, 322.0], [72.3, 322.0], [72.4, 322.0], [72.5, 322.0], [72.6, 322.0], [72.7, 322.0], [72.8, 323.0], [72.9, 323.0], [73.0, 323.0], [73.1, 323.0], [73.2, 323.0], [73.3, 323.0], [73.4, 323.0], [73.5, 323.0], [73.6, 323.0], [73.7, 323.0], [73.8, 323.0], [73.9, 323.0], [74.0, 323.0], [74.1, 323.0], [74.2, 323.0], [74.3, 323.0], [74.4, 324.0], [74.5, 324.0], [74.6, 324.0], [74.7, 324.0], [74.8, 324.0], [74.9, 324.0], [75.0, 324.0], [75.1, 324.0], [75.2, 324.0], [75.3, 325.0], [75.4, 325.0], [75.5, 325.0], [75.6, 325.0], [75.7, 325.0], [75.8, 325.0], [75.9, 325.0], [76.0, 325.0], [76.1, 325.0], [76.2, 325.0], [76.3, 325.0], [76.4, 325.0], [76.5, 325.0], [76.6, 325.0], [76.7, 325.0], [76.8, 326.0], [76.9, 326.0], [77.0, 326.0], [77.1, 326.0], [77.2, 326.0], [77.3, 326.0], [77.4, 326.0], [77.5, 326.0], [77.6, 326.0], [77.7, 326.0], [77.8, 326.0], [77.9, 326.0], [78.0, 326.0], [78.1, 327.0], [78.2, 327.0], [78.3, 327.0], [78.4, 327.0], [78.5, 327.0], [78.6, 327.0], [78.7, 327.0], [78.8, 327.0], [78.9, 327.0], [79.0, 328.0], [79.1, 328.0], [79.2, 328.0], [79.3, 328.0], [79.4, 328.0], [79.5, 328.0], [79.6, 328.0], [79.7, 328.0], [79.8, 328.0], [79.9, 328.0], [80.0, 328.0], [80.1, 329.0], [80.2, 329.0], [80.3, 329.0], [80.4, 329.0], [80.5, 329.0], [80.6, 329.0], [80.7, 329.0], [80.8, 330.0], [80.9, 330.0], [81.0, 330.0], [81.1, 330.0], [81.2, 330.0], [81.3, 330.0], [81.4, 330.0], [81.5, 330.0], [81.6, 331.0], [81.7, 331.0], [81.8, 331.0], [81.9, 331.0], [82.0, 331.0], [82.1, 331.0], [82.2, 331.0], [82.3, 332.0], [82.4, 332.0], [82.5, 332.0], [82.6, 332.0], [82.7, 332.0], [82.8, 332.0], [82.9, 332.0], [83.0, 333.0], [83.1, 333.0], [83.2, 333.0], [83.3, 333.0], [83.4, 333.0], [83.5, 334.0], [83.6, 334.0], [83.7, 334.0], [83.8, 334.0], [83.9, 334.0], [84.0, 334.0], [84.1, 334.0], [84.2, 334.0], [84.3, 335.0], [84.4, 335.0], [84.5, 335.0], [84.6, 335.0], [84.7, 335.0], [84.8, 336.0], [84.9, 336.0], [85.0, 336.0], [85.1, 336.0], [85.2, 336.0], [85.3, 336.0], [85.4, 336.0], [85.5, 337.0], [85.6, 337.0], [85.7, 337.0], [85.8, 337.0], [85.9, 337.0], [86.0, 337.0], [86.1, 338.0], [86.2, 338.0], [86.3, 338.0], [86.4, 338.0], [86.5, 338.0], [86.6, 339.0], [86.7, 339.0], [86.8, 339.0], [86.9, 339.0], [87.0, 340.0], [87.1, 340.0], [87.2, 340.0], [87.3, 340.0], [87.4, 341.0], [87.5, 341.0], [87.6, 341.0], [87.7, 341.0], [87.8, 342.0], [87.9, 342.0], [88.0, 342.0], [88.1, 342.0], [88.2, 342.0], [88.3, 343.0], [88.4, 343.0], [88.5, 343.0], [88.6, 344.0], [88.7, 344.0], [88.8, 344.0], [88.9, 344.0], [89.0, 344.0], [89.1, 345.0], [89.2, 345.0], [89.3, 345.0], [89.4, 345.0], [89.5, 346.0], [89.6, 346.0], [89.7, 346.0], [89.8, 346.0], [89.9, 347.0], [90.0, 347.0], [90.1, 348.0], [90.2, 348.0], [90.3, 348.0], [90.4, 349.0], [90.5, 349.0], [90.6, 349.0], [90.7, 350.0], [90.8, 350.0], [90.9, 351.0], [91.0, 351.0], [91.1, 351.0], [91.2, 352.0], [91.3, 352.0], [91.4, 353.0], [91.5, 353.0], [91.6, 353.0], [91.7, 354.0], [91.8, 355.0], [91.9, 355.0], [92.0, 356.0], [92.1, 356.0], [92.2, 356.0], [92.3, 357.0], [92.4, 357.0], [92.5, 358.0], [92.6, 359.0], [92.7, 359.0], [92.8, 360.0], [92.9, 361.0], [93.0, 362.0], [93.1, 363.0], [93.2, 363.0], [93.3, 364.0], [93.4, 365.0], [93.5, 365.0], [93.6, 365.0], [93.7, 366.0], [93.8, 366.0], [93.9, 367.0], [94.0, 367.0], [94.1, 368.0], [94.2, 370.0], [94.3, 370.0], [94.4, 372.0], [94.5, 373.0], [94.6, 374.0], [94.7, 375.0], [94.8, 377.0], [94.9, 378.0], [95.0, 379.0], [95.1, 380.0], [95.2, 382.0], [95.3, 382.0], [95.4, 383.0], [95.5, 385.0], [95.6, 386.0], [95.7, 387.0], [95.8, 388.0], [95.9, 389.0], [96.0, 391.0], [96.1, 393.0], [96.2, 395.0], [96.3, 396.0], [96.4, 397.0], [96.5, 399.0], [96.6, 400.0], [96.7, 403.0], [96.8, 404.0], [96.9, 405.0], [97.0, 406.0], [97.1, 408.0], [97.2, 409.0], [97.3, 411.0], [97.4, 413.0], [97.5, 421.0], [97.6, 428.0], [97.7, 430.0], [97.8, 434.0], [97.9, 446.0], [98.0, 454.0], [98.1, 464.0], [98.2, 476.0], [98.3, 483.0], [98.4, 503.0], [98.5, 529.0], [98.6, 645.0], [98.7, 667.0], [98.8, 704.0], [98.9, 724.0], [99.0, 741.0], [99.1, 773.0], [99.2, 839.0], [99.3, 892.0], [99.4, 905.0], [99.5, 926.0], [99.6, 958.0], [99.7, 992.0], [99.8, 1078.0], [99.9, 1438.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[0.0, 265.0], [0.1, 268.0], [0.2, 270.0], [0.3, 271.0], [0.4, 272.0], [0.5, 274.0], [0.6, 274.0], [0.7, 274.0], [0.8, 275.0], [0.9, 276.0], [1.0, 276.0], [1.1, 277.0], [1.2, 277.0], [1.3, 277.0], [1.4, 278.0], [1.5, 278.0], [1.6, 278.0], [1.7, 278.0], [1.8, 279.0], [1.9, 279.0], [2.0, 279.0], [2.1, 279.0], [2.2, 280.0], [2.3, 280.0], [2.4, 280.0], [2.5, 280.0], [2.6, 281.0], [2.7, 281.0], [2.8, 281.0], [2.9, 281.0], [3.0, 281.0], [3.1, 282.0], [3.2, 282.0], [3.3, 282.0], [3.4, 282.0], [3.5, 282.0], [3.6, 282.0], [3.7, 282.0], [3.8, 283.0], [3.9, 283.0], [4.0, 283.0], [4.1, 283.0], [4.2, 283.0], [4.3, 283.0], [4.4, 283.0], [4.5, 284.0], [4.6, 284.0], [4.7, 284.0], [4.8, 284.0], [4.9, 284.0], [5.0, 284.0], [5.1, 284.0], [5.2, 284.0], [5.3, 284.0], [5.4, 285.0], [5.5, 285.0], [5.6, 285.0], [5.7, 285.0], [5.8, 285.0], [5.9, 285.0], [6.0, 285.0], [6.1, 285.0], [6.2, 285.0], [6.3, 285.0], [6.4, 286.0], [6.5, 286.0], [6.6, 286.0], [6.7, 286.0], [6.8, 286.0], [6.9, 286.0], [7.0, 286.0], [7.1, 286.0], [7.2, 286.0], [7.3, 286.0], [7.4, 286.0], [7.5, 286.0], [7.6, 286.0], [7.7, 286.0], [7.8, 287.0], [7.9, 287.0], [8.0, 287.0], [8.1, 287.0], [8.2, 287.0], [8.3, 287.0], [8.4, 287.0], [8.5, 287.0], [8.6, 287.0], [8.7, 287.0], [8.8, 287.0], [8.9, 287.0], [9.0, 288.0], [9.1, 288.0], [9.2, 288.0], [9.3, 288.0], [9.4, 288.0], [9.5, 288.0], [9.6, 288.0], [9.7, 288.0], [9.8, 288.0], [9.9, 288.0], [10.0, 288.0], [10.1, 288.0], [10.2, 288.0], [10.3, 288.0], [10.4, 288.0], [10.5, 288.0], [10.6, 289.0], [10.7, 289.0], [10.8, 289.0], [10.9, 289.0], [11.0, 289.0], [11.1, 289.0], [11.2, 289.0], [11.3, 289.0], [11.4, 289.0], [11.5, 289.0], [11.6, 289.0], [11.7, 289.0], [11.8, 289.0], [11.9, 289.0], [12.0, 290.0], [12.1, 290.0], [12.2, 290.0], [12.3, 290.0], [12.4, 290.0], [12.5, 290.0], [12.6, 290.0], [12.7, 290.0], [12.8, 290.0], [12.9, 290.0], [13.0, 290.0], [13.1, 290.0], [13.2, 290.0], [13.3, 290.0], [13.4, 290.0], [13.5, 290.0], [13.6, 291.0], [13.7, 291.0], [13.8, 291.0], [13.9, 291.0], [14.0, 291.0], [14.1, 291.0], [14.2, 291.0], [14.3, 291.0], [14.4, 291.0], [14.5, 291.0], [14.6, 291.0], [14.7, 291.0], [14.8, 291.0], [14.9, 292.0], [15.0, 292.0], [15.1, 292.0], [15.2, 292.0], [15.3, 292.0], [15.4, 292.0], [15.5, 292.0], [15.6, 292.0], [15.7, 292.0], [15.8, 292.0], [15.9, 292.0], [16.0, 292.0], [16.1, 292.0], [16.2, 293.0], [16.3, 293.0], [16.4, 293.0], [16.5, 293.0], [16.6, 293.0], [16.7, 293.0], [16.8, 293.0], [16.9, 293.0], [17.0, 293.0], [17.1, 293.0], [17.2, 293.0], [17.3, 293.0], [17.4, 293.0], [17.5, 293.0], [17.6, 293.0], [17.7, 293.0], [17.8, 293.0], [17.9, 294.0], [18.0, 294.0], [18.1, 294.0], [18.2, 294.0], [18.3, 294.0], [18.4, 294.0], [18.5, 294.0], [18.6, 294.0], [18.7, 294.0], [18.8, 294.0], [18.9, 294.0], [19.0, 294.0], [19.1, 294.0], [19.2, 294.0], [19.3, 294.0], [19.4, 294.0], [19.5, 294.0], [19.6, 294.0], [19.7, 295.0], [19.8, 295.0], [19.9, 295.0], [20.0, 295.0], [20.1, 295.0], [20.2, 295.0], [20.3, 295.0], [20.4, 295.0], [20.5, 295.0], [20.6, 295.0], [20.7, 295.0], [20.8, 295.0], [20.9, 295.0], [21.0, 295.0], [21.1, 295.0], [21.2, 295.0], [21.3, 295.0], [21.4, 295.0], [21.5, 295.0], [21.6, 295.0], [21.7, 295.0], [21.8, 295.0], [21.9, 295.0], [22.0, 296.0], [22.1, 296.0], [22.2, 296.0], [22.3, 296.0], [22.4, 296.0], [22.5, 296.0], [22.6, 296.0], [22.7, 296.0], [22.8, 296.0], [22.9, 296.0], [23.0, 296.0], [23.1, 296.0], [23.2, 296.0], [23.3, 296.0], [23.4, 296.0], [23.5, 296.0], [23.6, 296.0], [23.7, 296.0], [23.8, 296.0], [23.9, 296.0], [24.0, 297.0], [24.1, 297.0], [24.2, 297.0], [24.3, 297.0], [24.4, 297.0], [24.5, 297.0], [24.6, 297.0], [24.7, 297.0], [24.8, 297.0], [24.9, 297.0], [25.0, 297.0], [25.1, 297.0], [25.2, 297.0], [25.3, 297.0], [25.4, 297.0], [25.5, 297.0], [25.6, 297.0], [25.7, 297.0], [25.8, 297.0], [25.9, 298.0], [26.0, 298.0], [26.1, 298.0], [26.2, 298.0], [26.3, 298.0], [26.4, 298.0], [26.5, 298.0], [26.6, 298.0], [26.7, 298.0], [26.8, 298.0], [26.9, 298.0], [27.0, 298.0], [27.1, 298.0], [27.2, 298.0], [27.3, 298.0], [27.4, 298.0], [27.5, 298.0], [27.6, 298.0], [27.7, 298.0], [27.8, 298.0], [27.9, 298.0], [28.0, 298.0], [28.1, 299.0], [28.2, 299.0], [28.3, 299.0], [28.4, 299.0], [28.5, 299.0], [28.6, 299.0], [28.7, 299.0], [28.8, 299.0], [28.9, 299.0], [29.0, 299.0], [29.1, 299.0], [29.2, 299.0], [29.3, 299.0], [29.4, 299.0], [29.5, 299.0], [29.6, 299.0], [29.7, 299.0], [29.8, 299.0], [29.9, 299.0], [30.0, 299.0], [30.1, 299.0], [30.2, 300.0], [30.3, 300.0], [30.4, 300.0], [30.5, 300.0], [30.6, 300.0], [30.7, 300.0], [30.8, 300.0], [30.9, 300.0], [31.0, 300.0], [31.1, 300.0], [31.2, 300.0], [31.3, 300.0], [31.4, 300.0], [31.5, 300.0], [31.6, 300.0], [31.7, 300.0], [31.8, 300.0], [31.9, 300.0], [32.0, 300.0], [32.1, 300.0], [32.2, 300.0], [32.3, 300.0], [32.4, 300.0], [32.5, 300.0], [32.6, 300.0], [32.7, 301.0], [32.8, 301.0], [32.9, 301.0], [33.0, 301.0], [33.1, 301.0], [33.2, 301.0], [33.3, 301.0], [33.4, 301.0], [33.5, 301.0], [33.6, 301.0], [33.7, 301.0], [33.8, 301.0], [33.9, 301.0], [34.0, 301.0], [34.1, 301.0], [34.2, 301.0], [34.3, 301.0], [34.4, 301.0], [34.5, 301.0], [34.6, 301.0], [34.7, 301.0], [34.8, 302.0], [34.9, 302.0], [35.0, 302.0], [35.1, 302.0], [35.2, 302.0], [35.3, 302.0], [35.4, 302.0], [35.5, 302.0], [35.6, 302.0], [35.7, 302.0], [35.8, 302.0], [35.9, 302.0], [36.0, 302.0], [36.1, 302.0], [36.2, 302.0], [36.3, 302.0], [36.4, 302.0], [36.5, 302.0], [36.6, 302.0], [36.7, 302.0], [36.8, 302.0], [36.9, 302.0], [37.0, 302.0], [37.1, 303.0], [37.2, 303.0], [37.3, 303.0], [37.4, 303.0], [37.5, 303.0], [37.6, 303.0], [37.7, 303.0], [37.8, 303.0], [37.9, 303.0], [38.0, 303.0], [38.1, 303.0], [38.2, 303.0], [38.3, 303.0], [38.4, 303.0], [38.5, 303.0], [38.6, 303.0], [38.7, 303.0], [38.8, 303.0], [38.9, 303.0], [39.0, 303.0], [39.1, 303.0], [39.2, 304.0], [39.3, 304.0], [39.4, 304.0], [39.5, 304.0], [39.6, 304.0], [39.7, 304.0], [39.8, 304.0], [39.9, 304.0], [40.0, 304.0], [40.1, 304.0], [40.2, 304.0], [40.3, 304.0], [40.4, 304.0], [40.5, 304.0], [40.6, 304.0], [40.7, 304.0], [40.8, 304.0], [40.9, 304.0], [41.0, 304.0], [41.1, 305.0], [41.2, 305.0], [41.3, 305.0], [41.4, 305.0], [41.5, 305.0], [41.6, 305.0], [41.7, 305.0], [41.8, 305.0], [41.9, 305.0], [42.0, 305.0], [42.1, 305.0], [42.2, 305.0], [42.3, 305.0], [42.4, 305.0], [42.5, 305.0], [42.6, 305.0], [42.7, 305.0], [42.8, 305.0], [42.9, 305.0], [43.0, 305.0], [43.1, 305.0], [43.2, 305.0], [43.3, 306.0], [43.4, 306.0], [43.5, 306.0], [43.6, 306.0], [43.7, 306.0], [43.8, 306.0], [43.9, 306.0], [44.0, 306.0], [44.1, 306.0], [44.2, 306.0], [44.3, 306.0], [44.4, 306.0], [44.5, 306.0], [44.6, 306.0], [44.7, 306.0], [44.8, 306.0], [44.9, 306.0], [45.0, 306.0], [45.1, 306.0], [45.2, 306.0], [45.3, 306.0], [45.4, 306.0], [45.5, 306.0], [45.6, 307.0], [45.7, 307.0], [45.8, 307.0], [45.9, 307.0], [46.0, 307.0], [46.1, 307.0], [46.2, 307.0], [46.3, 307.0], [46.4, 307.0], [46.5, 307.0], [46.6, 307.0], [46.7, 307.0], [46.8, 307.0], [46.9, 307.0], [47.0, 307.0], [47.1, 307.0], [47.2, 307.0], [47.3, 307.0], [47.4, 307.0], [47.5, 307.0], [47.6, 307.0], [47.7, 307.0], [47.8, 307.0], [47.9, 307.0], [48.0, 307.0], [48.1, 308.0], [48.2, 308.0], [48.3, 308.0], [48.4, 308.0], [48.5, 308.0], [48.6, 308.0], [48.7, 308.0], [48.8, 308.0], [48.9, 308.0], [49.0, 308.0], [49.1, 308.0], [49.2, 308.0], [49.3, 308.0], [49.4, 308.0], [49.5, 308.0], [49.6, 308.0], [49.7, 308.0], [49.8, 308.0], [49.9, 308.0], [50.0, 308.0], [50.1, 308.0], [50.2, 308.0], [50.3, 308.0], [50.4, 308.0], [50.5, 308.0], [50.6, 309.0], [50.7, 309.0], [50.8, 309.0], [50.9, 309.0], [51.0, 309.0], [51.1, 309.0], [51.2, 309.0], [51.3, 309.0], [51.4, 309.0], [51.5, 309.0], [51.6, 309.0], [51.7, 309.0], [51.8, 309.0], [51.9, 309.0], [52.0, 309.0], [52.1, 309.0], [52.2, 309.0], [52.3, 309.0], [52.4, 309.0], [52.5, 309.0], [52.6, 309.0], [52.7, 309.0], [52.8, 310.0], [52.9, 310.0], [53.0, 310.0], [53.1, 310.0], [53.2, 310.0], [53.3, 310.0], [53.4, 310.0], [53.5, 310.0], [53.6, 310.0], [53.7, 310.0], [53.8, 310.0], [53.9, 310.0], [54.0, 310.0], [54.1, 310.0], [54.2, 310.0], [54.3, 310.0], [54.4, 310.0], [54.5, 310.0], [54.6, 310.0], [54.7, 310.0], [54.8, 310.0], [54.9, 310.0], [55.0, 310.0], [55.1, 311.0], [55.2, 311.0], [55.3, 311.0], [55.4, 311.0], [55.5, 311.0], [55.6, 311.0], [55.7, 311.0], [55.8, 311.0], [55.9, 311.0], [56.0, 311.0], [56.1, 311.0], [56.2, 311.0], [56.3, 311.0], [56.4, 311.0], [56.5, 311.0], [56.6, 311.0], [56.7, 311.0], [56.8, 311.0], [56.9, 311.0], [57.0, 311.0], [57.1, 312.0], [57.2, 312.0], [57.3, 312.0], [57.4, 312.0], [57.5, 312.0], [57.6, 312.0], [57.7, 312.0], [57.8, 312.0], [57.9, 312.0], [58.0, 312.0], [58.1, 312.0], [58.2, 312.0], [58.3, 312.0], [58.4, 312.0], [58.5, 312.0], [58.6, 312.0], [58.7, 312.0], [58.8, 313.0], [58.9, 313.0], [59.0, 313.0], [59.1, 313.0], [59.2, 313.0], [59.3, 313.0], [59.4, 313.0], [59.5, 313.0], [59.6, 313.0], [59.7, 313.0], [59.8, 313.0], [59.9, 313.0], [60.0, 313.0], [60.1, 313.0], [60.2, 313.0], [60.3, 313.0], [60.4, 313.0], [60.5, 313.0], [60.6, 313.0], [60.7, 313.0], [60.8, 313.0], [60.9, 313.0], [61.0, 313.0], [61.1, 314.0], [61.2, 314.0], [61.3, 314.0], [61.4, 314.0], [61.5, 314.0], [61.6, 314.0], [61.7, 314.0], [61.8, 314.0], [61.9, 314.0], [62.0, 314.0], [62.1, 314.0], [62.2, 314.0], [62.3, 314.0], [62.4, 314.0], [62.5, 314.0], [62.6, 314.0], [62.7, 314.0], [62.8, 314.0], [62.9, 314.0], [63.0, 314.0], [63.1, 315.0], [63.2, 315.0], [63.3, 315.0], [63.4, 315.0], [63.5, 315.0], [63.6, 315.0], [63.7, 315.0], [63.8, 315.0], [63.9, 315.0], [64.0, 315.0], [64.1, 315.0], [64.2, 315.0], [64.3, 315.0], [64.4, 315.0], [64.5, 315.0], [64.6, 315.0], [64.7, 315.0], [64.8, 315.0], [64.9, 315.0], [65.0, 315.0], [65.1, 316.0], [65.2, 316.0], [65.3, 316.0], [65.4, 316.0], [65.5, 316.0], [65.6, 316.0], [65.7, 316.0], [65.8, 316.0], [65.9, 316.0], [66.0, 316.0], [66.1, 316.0], [66.2, 316.0], [66.3, 316.0], [66.4, 316.0], [66.5, 316.0], [66.6, 316.0], [66.7, 316.0], [66.8, 316.0], [66.9, 316.0], [67.0, 317.0], [67.1, 317.0], [67.2, 317.0], [67.3, 317.0], [67.4, 317.0], [67.5, 317.0], [67.6, 317.0], [67.7, 317.0], [67.8, 317.0], [67.9, 317.0], [68.0, 317.0], [68.1, 317.0], [68.2, 317.0], [68.3, 317.0], [68.4, 317.0], [68.5, 317.0], [68.6, 317.0], [68.7, 318.0], [68.8, 318.0], [68.9, 318.0], [69.0, 318.0], [69.1, 318.0], [69.2, 318.0], [69.3, 318.0], [69.4, 318.0], [69.5, 318.0], [69.6, 318.0], [69.7, 318.0], [69.8, 318.0], [69.9, 318.0], [70.0, 318.0], [70.1, 318.0], [70.2, 318.0], [70.3, 318.0], [70.4, 318.0], [70.5, 319.0], [70.6, 319.0], [70.7, 319.0], [70.8, 319.0], [70.9, 319.0], [71.0, 319.0], [71.1, 319.0], [71.2, 319.0], [71.3, 319.0], [71.4, 319.0], [71.5, 319.0], [71.6, 319.0], [71.7, 319.0], [71.8, 319.0], [71.9, 319.0], [72.0, 319.0], [72.1, 320.0], [72.2, 320.0], [72.3, 320.0], [72.4, 320.0], [72.5, 320.0], [72.6, 320.0], [72.7, 320.0], [72.8, 320.0], [72.9, 320.0], [73.0, 320.0], [73.1, 320.0], [73.2, 320.0], [73.3, 320.0], [73.4, 320.0], [73.5, 320.0], [73.6, 320.0], [73.7, 320.0], [73.8, 320.0], [73.9, 321.0], [74.0, 321.0], [74.1, 321.0], [74.2, 321.0], [74.3, 321.0], [74.4, 321.0], [74.5, 321.0], [74.6, 321.0], [74.7, 321.0], [74.8, 321.0], [74.9, 321.0], [75.0, 321.0], [75.1, 321.0], [75.2, 322.0], [75.3, 322.0], [75.4, 322.0], [75.5, 322.0], [75.6, 322.0], [75.7, 322.0], [75.8, 322.0], [75.9, 322.0], [76.0, 322.0], [76.1, 322.0], [76.2, 322.0], [76.3, 322.0], [76.4, 322.0], [76.5, 322.0], [76.6, 322.0], [76.7, 322.0], [76.8, 323.0], [76.9, 323.0], [77.0, 323.0], [77.1, 323.0], [77.2, 323.0], [77.3, 323.0], [77.4, 323.0], [77.5, 323.0], [77.6, 323.0], [77.7, 323.0], [77.8, 323.0], [77.9, 323.0], [78.0, 323.0], [78.1, 324.0], [78.2, 324.0], [78.3, 324.0], [78.4, 324.0], [78.5, 324.0], [78.6, 324.0], [78.7, 324.0], [78.8, 324.0], [78.9, 324.0], [79.0, 324.0], [79.1, 324.0], [79.2, 325.0], [79.3, 325.0], [79.4, 325.0], [79.5, 325.0], [79.6, 325.0], [79.7, 325.0], [79.8, 325.0], [79.9, 325.0], [80.0, 325.0], [80.1, 325.0], [80.2, 326.0], [80.3, 326.0], [80.4, 326.0], [80.5, 326.0], [80.6, 326.0], [80.7, 326.0], [80.8, 326.0], [80.9, 326.0], [81.0, 326.0], [81.1, 326.0], [81.2, 327.0], [81.3, 327.0], [81.4, 327.0], [81.5, 327.0], [81.6, 327.0], [81.7, 327.0], [81.8, 327.0], [81.9, 327.0], [82.0, 327.0], [82.1, 327.0], [82.2, 328.0], [82.3, 328.0], [82.4, 328.0], [82.5, 328.0], [82.6, 328.0], [82.7, 328.0], [82.8, 328.0], [82.9, 328.0], [83.0, 329.0], [83.1, 329.0], [83.2, 329.0], [83.3, 329.0], [83.4, 329.0], [83.5, 329.0], [83.6, 330.0], [83.7, 330.0], [83.8, 330.0], [83.9, 330.0], [84.0, 330.0], [84.1, 330.0], [84.2, 330.0], [84.3, 331.0], [84.4, 331.0], [84.5, 331.0], [84.6, 331.0], [84.7, 331.0], [84.8, 331.0], [84.9, 331.0], [85.0, 331.0], [85.1, 331.0], [85.2, 332.0], [85.3, 332.0], [85.4, 332.0], [85.5, 332.0], [85.6, 332.0], [85.7, 333.0], [85.8, 333.0], [85.9, 333.0], [86.0, 333.0], [86.1, 333.0], [86.2, 333.0], [86.3, 334.0], [86.4, 334.0], [86.5, 334.0], [86.6, 334.0], [86.7, 335.0], [86.8, 335.0], [86.9, 335.0], [87.0, 336.0], [87.1, 336.0], [87.2, 336.0], [87.3, 336.0], [87.4, 337.0], [87.5, 337.0], [87.6, 337.0], [87.7, 337.0], [87.8, 338.0], [87.9, 338.0], [88.0, 338.0], [88.1, 339.0], [88.2, 339.0], [88.3, 339.0], [88.4, 339.0], [88.5, 339.0], [88.6, 340.0], [88.7, 340.0], [88.8, 340.0], [88.9, 341.0], [89.0, 341.0], [89.1, 341.0], [89.2, 341.0], [89.3, 342.0], [89.4, 342.0], [89.5, 343.0], [89.6, 343.0], [89.7, 344.0], [89.8, 344.0], [89.9, 344.0], [90.0, 344.0], [90.1, 344.0], [90.2, 345.0], [90.3, 346.0], [90.4, 347.0], [90.5, 347.0], [90.6, 347.0], [90.7, 348.0], [90.8, 348.0], [90.9, 349.0], [91.0, 349.0], [91.1, 349.0], [91.2, 350.0], [91.3, 350.0], [91.4, 350.0], [91.5, 351.0], [91.6, 351.0], [91.7, 352.0], [91.8, 352.0], [91.9, 353.0], [92.0, 353.0], [92.1, 354.0], [92.2, 354.0], [92.3, 355.0], [92.4, 355.0], [92.5, 356.0], [92.6, 357.0], [92.7, 357.0], [92.8, 358.0], [92.9, 359.0], [93.0, 360.0], [93.1, 360.0], [93.2, 361.0], [93.3, 361.0], [93.4, 362.0], [93.5, 363.0], [93.6, 363.0], [93.7, 364.0], [93.8, 364.0], [93.9, 365.0], [94.0, 365.0], [94.1, 366.0], [94.2, 367.0], [94.3, 367.0], [94.4, 368.0], [94.5, 368.0], [94.6, 369.0], [94.7, 370.0], [94.8, 370.0], [94.9, 371.0], [95.0, 373.0], [95.1, 374.0], [95.2, 374.0], [95.3, 375.0], [95.4, 376.0], [95.5, 377.0], [95.6, 378.0], [95.7, 379.0], [95.8, 380.0], [95.9, 381.0], [96.0, 383.0], [96.1, 384.0], [96.2, 387.0], [96.3, 388.0], [96.4, 388.0], [96.5, 390.0], [96.6, 392.0], [96.7, 395.0], [96.8, 396.0], [96.9, 397.0], [97.0, 399.0], [97.1, 399.0], [97.2, 402.0], [97.3, 405.0], [97.4, 407.0], [97.5, 409.0], [97.6, 411.0], [97.7, 413.0], [97.8, 420.0], [97.9, 423.0], [98.0, 428.0], [98.1, 436.0], [98.2, 441.0], [98.3, 449.0], [98.4, 456.0], [98.5, 468.0], [98.6, 490.0], [98.7, 497.0], [98.8, 537.0], [98.9, 751.0], [99.0, 798.0], [99.1, 836.0], [99.2, 895.0], [99.3, 956.0], [99.4, 1024.0], [99.5, 1057.0], [99.6, 1098.0], [99.7, 1126.0], [99.8, 1154.0], [99.9, 1706.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[0.0, 1092.0], [0.1, 1107.0], [0.2, 1112.0], [0.3, 1114.0], [0.4, 1115.0], [0.5, 1118.0], [0.6, 1119.0], [0.7, 1121.0], [0.8, 1122.0], [0.9, 1124.0], [1.0, 1125.0], [1.1, 1126.0], [1.2, 1128.0], [1.3, 1129.0], [1.4, 1130.0], [1.5, 1131.0], [1.6, 1132.0], [1.7, 1133.0], [1.8, 1134.0], [1.9, 1134.0], [2.0, 1135.0], [2.1, 1135.0], [2.2, 1136.0], [2.3, 1137.0], [2.4, 1138.0], [2.5, 1139.0], [2.6, 1140.0], [2.7, 1140.0], [2.8, 1141.0], [2.9, 1142.0], [3.0, 1142.0], [3.1, 1143.0], [3.2, 1144.0], [3.3, 1144.0], [3.4, 1145.0], [3.5, 1146.0], [3.6, 1147.0], [3.7, 1147.0], [3.8, 1147.0], [3.9, 1148.0], [4.0, 1148.0], [4.1, 1148.0], [4.2, 1149.0], [4.3, 1149.0], [4.4, 1150.0], [4.5, 1150.0], [4.6, 1151.0], [4.7, 1151.0], [4.8, 1151.0], [4.9, 1152.0], [5.0, 1152.0], [5.1, 1152.0], [5.2, 1152.0], [5.3, 1153.0], [5.4, 1153.0], [5.5, 1153.0], [5.6, 1154.0], [5.7, 1154.0], [5.8, 1154.0], [5.9, 1154.0], [6.0, 1155.0], [6.1, 1156.0], [6.2, 1156.0], [6.3, 1156.0], [6.4, 1157.0], [6.5, 1157.0], [6.6, 1157.0], [6.7, 1157.0], [6.8, 1158.0], [6.9, 1158.0], [7.0, 1158.0], [7.1, 1159.0], [7.2, 1159.0], [7.3, 1159.0], [7.4, 1160.0], [7.5, 1160.0], [7.6, 1161.0], [7.7, 1161.0], [7.8, 1161.0], [7.9, 1162.0], [8.0, 1162.0], [8.1, 1162.0], [8.2, 1162.0], [8.3, 1163.0], [8.4, 1163.0], [8.5, 1163.0], [8.6, 1164.0], [8.7, 1164.0], [8.8, 1165.0], [8.9, 1165.0], [9.0, 1165.0], [9.1, 1165.0], [9.2, 1166.0], [9.3, 1166.0], [9.4, 1166.0], [9.5, 1166.0], [9.6, 1166.0], [9.7, 1167.0], [9.8, 1167.0], [9.9, 1167.0], [10.0, 1167.0], [10.1, 1168.0], [10.2, 1168.0], [10.3, 1168.0], [10.4, 1168.0], [10.5, 1168.0], [10.6, 1169.0], [10.7, 1169.0], [10.8, 1169.0], [10.9, 1169.0], [11.0, 1170.0], [11.1, 1170.0], [11.2, 1170.0], [11.3, 1170.0], [11.4, 1171.0], [11.5, 1171.0], [11.6, 1171.0], [11.7, 1171.0], [11.8, 1172.0], [11.9, 1172.0], [12.0, 1172.0], [12.1, 1172.0], [12.2, 1172.0], [12.3, 1173.0], [12.4, 1173.0], [12.5, 1173.0], [12.6, 1174.0], [12.7, 1174.0], [12.8, 1174.0], [12.9, 1175.0], [13.0, 1175.0], [13.1, 1176.0], [13.2, 1176.0], [13.3, 1177.0], [13.4, 1177.0], [13.5, 1177.0], [13.6, 1177.0], [13.7, 1178.0], [13.8, 1178.0], [13.9, 1178.0], [14.0, 1178.0], [14.1, 1178.0], [14.2, 1179.0], [14.3, 1179.0], [14.4, 1179.0], [14.5, 1180.0], [14.6, 1180.0], [14.7, 1180.0], [14.8, 1181.0], [14.9, 1181.0], [15.0, 1181.0], [15.1, 1181.0], [15.2, 1182.0], [15.3, 1182.0], [15.4, 1182.0], [15.5, 1182.0], [15.6, 1183.0], [15.7, 1183.0], [15.8, 1183.0], [15.9, 1183.0], [16.0, 1183.0], [16.1, 1183.0], [16.2, 1184.0], [16.3, 1184.0], [16.4, 1184.0], [16.5, 1184.0], [16.6, 1185.0], [16.7, 1185.0], [16.8, 1185.0], [16.9, 1185.0], [17.0, 1186.0], [17.1, 1186.0], [17.2, 1186.0], [17.3, 1186.0], [17.4, 1187.0], [17.5, 1187.0], [17.6, 1187.0], [17.7, 1187.0], [17.8, 1187.0], [17.9, 1188.0], [18.0, 1188.0], [18.1, 1188.0], [18.2, 1188.0], [18.3, 1189.0], [18.4, 1189.0], [18.5, 1189.0], [18.6, 1189.0], [18.7, 1190.0], [18.8, 1190.0], [18.9, 1190.0], [19.0, 1190.0], [19.1, 1190.0], [19.2, 1191.0], [19.3, 1191.0], [19.4, 1191.0], [19.5, 1192.0], [19.6, 1192.0], [19.7, 1192.0], [19.8, 1192.0], [19.9, 1192.0], [20.0, 1193.0], [20.1, 1193.0], [20.2, 1193.0], [20.3, 1193.0], [20.4, 1194.0], [20.5, 1194.0], [20.6, 1194.0], [20.7, 1194.0], [20.8, 1194.0], [20.9, 1195.0], [21.0, 1195.0], [21.1, 1195.0], [21.2, 1195.0], [21.3, 1196.0], [21.4, 1196.0], [21.5, 1196.0], [21.6, 1196.0], [21.7, 1197.0], [21.8, 1197.0], [21.9, 1197.0], [22.0, 1197.0], [22.1, 1198.0], [22.2, 1198.0], [22.3, 1198.0], [22.4, 1198.0], [22.5, 1198.0], [22.6, 1198.0], [22.7, 1199.0], [22.8, 1199.0], [22.9, 1199.0], [23.0, 1199.0], [23.1, 1199.0], [23.2, 1199.0], [23.3, 1199.0], [23.4, 1200.0], [23.5, 1200.0], [23.6, 1200.0], [23.7, 1200.0], [23.8, 1200.0], [23.9, 1201.0], [24.0, 1201.0], [24.1, 1201.0], [24.2, 1201.0], [24.3, 1201.0], [24.4, 1201.0], [24.5, 1202.0], [24.6, 1202.0], [24.7, 1202.0], [24.8, 1202.0], [24.9, 1202.0], [25.0, 1203.0], [25.1, 1203.0], [25.2, 1203.0], [25.3, 1204.0], [25.4, 1204.0], [25.5, 1204.0], [25.6, 1204.0], [25.7, 1204.0], [25.8, 1205.0], [25.9, 1205.0], [26.0, 1205.0], [26.1, 1205.0], [26.2, 1206.0], [26.3, 1206.0], [26.4, 1206.0], [26.5, 1206.0], [26.6, 1206.0], [26.7, 1207.0], [26.8, 1207.0], [26.9, 1207.0], [27.0, 1207.0], [27.1, 1207.0], [27.2, 1207.0], [27.3, 1208.0], [27.4, 1208.0], [27.5, 1208.0], [27.6, 1208.0], [27.7, 1209.0], [27.8, 1209.0], [27.9, 1209.0], [28.0, 1209.0], [28.1, 1209.0], [28.2, 1209.0], [28.3, 1209.0], [28.4, 1209.0], [28.5, 1210.0], [28.6, 1210.0], [28.7, 1210.0], [28.8, 1210.0], [28.9, 1210.0], [29.0, 1210.0], [29.1, 1211.0], [29.2, 1211.0], [29.3, 1211.0], [29.4, 1211.0], [29.5, 1211.0], [29.6, 1211.0], [29.7, 1211.0], [29.8, 1211.0], [29.9, 1211.0], [30.0, 1212.0], [30.1, 1212.0], [30.2, 1212.0], [30.3, 1212.0], [30.4, 1212.0], [30.5, 1212.0], [30.6, 1213.0], [30.7, 1213.0], [30.8, 1213.0], [30.9, 1213.0], [31.0, 1214.0], [31.1, 1214.0], [31.2, 1214.0], [31.3, 1214.0], [31.4, 1214.0], [31.5, 1214.0], [31.6, 1215.0], [31.7, 1215.0], [31.8, 1215.0], [31.9, 1215.0], [32.0, 1216.0], [32.1, 1216.0], [32.2, 1216.0], [32.3, 1216.0], [32.4, 1217.0], [32.5, 1217.0], [32.6, 1217.0], [32.7, 1217.0], [32.8, 1217.0], [32.9, 1218.0], [33.0, 1218.0], [33.1, 1218.0], [33.2, 1218.0], [33.3, 1218.0], [33.4, 1219.0], [33.5, 1219.0], [33.6, 1219.0], [33.7, 1219.0], [33.8, 1219.0], [33.9, 1219.0], [34.0, 1220.0], [34.1, 1220.0], [34.2, 1220.0], [34.3, 1221.0], [34.4, 1221.0], [34.5, 1221.0], [34.6, 1221.0], [34.7, 1221.0], [34.8, 1222.0], [34.9, 1222.0], [35.0, 1222.0], [35.1, 1222.0], [35.2, 1222.0], [35.3, 1222.0], [35.4, 1222.0], [35.5, 1223.0], [35.6, 1223.0], [35.7, 1223.0], [35.8, 1223.0], [35.9, 1223.0], [36.0, 1224.0], [36.1, 1224.0], [36.2, 1224.0], [36.3, 1224.0], [36.4, 1224.0], [36.5, 1225.0], [36.6, 1225.0], [36.7, 1225.0], [36.8, 1225.0], [36.9, 1225.0], [37.0, 1226.0], [37.1, 1226.0], [37.2, 1226.0], [37.3, 1226.0], [37.4, 1226.0], [37.5, 1227.0], [37.6, 1227.0], [37.7, 1227.0], [37.8, 1227.0], [37.9, 1227.0], [38.0, 1227.0], [38.1, 1228.0], [38.2, 1228.0], [38.3, 1228.0], [38.4, 1228.0], [38.5, 1228.0], [38.6, 1228.0], [38.7, 1229.0], [38.8, 1229.0], [38.9, 1229.0], [39.0, 1229.0], [39.1, 1230.0], [39.2, 1230.0], [39.3, 1230.0], [39.4, 1231.0], [39.5, 1231.0], [39.6, 1231.0], [39.7, 1231.0], [39.8, 1231.0], [39.9, 1231.0], [40.0, 1232.0], [40.1, 1232.0], [40.2, 1232.0], [40.3, 1233.0], [40.4, 1233.0], [40.5, 1233.0], [40.6, 1233.0], [40.7, 1233.0], [40.8, 1233.0], [40.9, 1234.0], [41.0, 1234.0], [41.1, 1234.0], [41.2, 1234.0], [41.3, 1234.0], [41.4, 1234.0], [41.5, 1234.0], [41.6, 1235.0], [41.7, 1235.0], [41.8, 1235.0], [41.9, 1235.0], [42.0, 1235.0], [42.1, 1236.0], [42.2, 1236.0], [42.3, 1236.0], [42.4, 1236.0], [42.5, 1237.0], [42.6, 1237.0], [42.7, 1237.0], [42.8, 1237.0], [42.9, 1237.0], [43.0, 1237.0], [43.1, 1237.0], [43.2, 1238.0], [43.3, 1238.0], [43.4, 1238.0], [43.5, 1238.0], [43.6, 1238.0], [43.7, 1238.0], [43.8, 1239.0], [43.9, 1239.0], [44.0, 1239.0], [44.1, 1239.0], [44.2, 1239.0], [44.3, 1240.0], [44.4, 1240.0], [44.5, 1240.0], [44.6, 1240.0], [44.7, 1241.0], [44.8, 1241.0], [44.9, 1241.0], [45.0, 1241.0], [45.1, 1241.0], [45.2, 1242.0], [45.3, 1242.0], [45.4, 1242.0], [45.5, 1242.0], [45.6, 1242.0], [45.7, 1242.0], [45.8, 1243.0], [45.9, 1243.0], [46.0, 1243.0], [46.1, 1243.0], [46.2, 1243.0], [46.3, 1243.0], [46.4, 1243.0], [46.5, 1244.0], [46.6, 1244.0], [46.7, 1244.0], [46.8, 1244.0], [46.9, 1244.0], [47.0, 1245.0], [47.1, 1245.0], [47.2, 1245.0], [47.3, 1245.0], [47.4, 1245.0], [47.5, 1245.0], [47.6, 1245.0], [47.7, 1246.0], [47.8, 1246.0], [47.9, 1246.0], [48.0, 1246.0], [48.1, 1247.0], [48.2, 1247.0], [48.3, 1247.0], [48.4, 1247.0], [48.5, 1247.0], [48.6, 1248.0], [48.7, 1248.0], [48.8, 1248.0], [48.9, 1248.0], [49.0, 1248.0], [49.1, 1248.0], [49.2, 1249.0], [49.3, 1249.0], [49.4, 1249.0], [49.5, 1249.0], [49.6, 1249.0], [49.7, 1249.0], [49.8, 1249.0], [49.9, 1250.0], [50.0, 1250.0], [50.1, 1250.0], [50.2, 1250.0], [50.3, 1250.0], [50.4, 1251.0], [50.5, 1251.0], [50.6, 1251.0], [50.7, 1251.0], [50.8, 1251.0], [50.9, 1251.0], [51.0, 1252.0], [51.1, 1252.0], [51.2, 1252.0], [51.3, 1252.0], [51.4, 1252.0], [51.5, 1253.0], [51.6, 1253.0], [51.7, 1253.0], [51.8, 1253.0], [51.9, 1253.0], [52.0, 1254.0], [52.1, 1254.0], [52.2, 1254.0], [52.3, 1254.0], [52.4, 1254.0], [52.5, 1255.0], [52.6, 1255.0], [52.7, 1255.0], [52.8, 1255.0], [52.9, 1256.0], [53.0, 1256.0], [53.1, 1256.0], [53.2, 1256.0], [53.3, 1256.0], [53.4, 1256.0], [53.5, 1257.0], [53.6, 1257.0], [53.7, 1257.0], [53.8, 1257.0], [53.9, 1258.0], [54.0, 1258.0], [54.1, 1258.0], [54.2, 1258.0], [54.3, 1258.0], [54.4, 1259.0], [54.5, 1259.0], [54.6, 1259.0], [54.7, 1259.0], [54.8, 1259.0], [54.9, 1259.0], [55.0, 1259.0], [55.1, 1260.0], [55.2, 1260.0], [55.3, 1260.0], [55.4, 1260.0], [55.5, 1261.0], [55.6, 1261.0], [55.7, 1261.0], [55.8, 1261.0], [55.9, 1261.0], [56.0, 1261.0], [56.1, 1261.0], [56.2, 1262.0], [56.3, 1262.0], [56.4, 1262.0], [56.5, 1262.0], [56.6, 1262.0], [56.7, 1262.0], [56.8, 1262.0], [56.9, 1263.0], [57.0, 1263.0], [57.1, 1263.0], [57.2, 1263.0], [57.3, 1263.0], [57.4, 1263.0], [57.5, 1263.0], [57.6, 1264.0], [57.7, 1264.0], [57.8, 1264.0], [57.9, 1264.0], [58.0, 1265.0], [58.1, 1265.0], [58.2, 1265.0], [58.3, 1265.0], [58.4, 1265.0], [58.5, 1266.0], [58.6, 1266.0], [58.7, 1266.0], [58.8, 1266.0], [58.9, 1266.0], [59.0, 1266.0], [59.1, 1267.0], [59.2, 1267.0], [59.3, 1267.0], [59.4, 1267.0], [59.5, 1268.0], [59.6, 1268.0], [59.7, 1268.0], [59.8, 1268.0], [59.9, 1268.0], [60.0, 1269.0], [60.1, 1269.0], [60.2, 1269.0], [60.3, 1269.0], [60.4, 1269.0], [60.5, 1270.0], [60.6, 1270.0], [60.7, 1270.0], [60.8, 1270.0], [60.9, 1270.0], [61.0, 1271.0], [61.1, 1271.0], [61.2, 1271.0], [61.3, 1271.0], [61.4, 1271.0], [61.5, 1271.0], [61.6, 1271.0], [61.7, 1271.0], [61.8, 1272.0], [61.9, 1272.0], [62.0, 1272.0], [62.1, 1272.0], [62.2, 1273.0], [62.3, 1273.0], [62.4, 1273.0], [62.5, 1273.0], [62.6, 1273.0], [62.7, 1273.0], [62.8, 1274.0], [62.9, 1274.0], [63.0, 1274.0], [63.1, 1274.0], [63.2, 1275.0], [63.3, 1275.0], [63.4, 1275.0], [63.5, 1275.0], [63.6, 1275.0], [63.7, 1276.0], [63.8, 1276.0], [63.9, 1276.0], [64.0, 1276.0], [64.1, 1276.0], [64.2, 1276.0], [64.3, 1277.0], [64.4, 1277.0], [64.5, 1277.0], [64.6, 1277.0], [64.7, 1278.0], [64.8, 1278.0], [64.9, 1278.0], [65.0, 1278.0], [65.1, 1278.0], [65.2, 1279.0], [65.3, 1279.0], [65.4, 1279.0], [65.5, 1279.0], [65.6, 1279.0], [65.7, 1280.0], [65.8, 1280.0], [65.9, 1280.0], [66.0, 1280.0], [66.1, 1280.0], [66.2, 1281.0], [66.3, 1281.0], [66.4, 1281.0], [66.5, 1282.0], [66.6, 1282.0], [66.7, 1282.0], [66.8, 1282.0], [66.9, 1282.0], [67.0, 1283.0], [67.1, 1283.0], [67.2, 1283.0], [67.3, 1283.0], [67.4, 1284.0], [67.5, 1284.0], [67.6, 1284.0], [67.7, 1284.0], [67.8, 1284.0], [67.9, 1285.0], [68.0, 1285.0], [68.1, 1285.0], [68.2, 1285.0], [68.3, 1286.0], [68.4, 1286.0], [68.5, 1286.0], [68.6, 1286.0], [68.7, 1287.0], [68.8, 1287.0], [68.9, 1287.0], [69.0, 1287.0], [69.1, 1288.0], [69.2, 1288.0], [69.3, 1288.0], [69.4, 1289.0], [69.5, 1289.0], [69.6, 1289.0], [69.7, 1289.0], [69.8, 1289.0], [69.9, 1290.0], [70.0, 1290.0], [70.1, 1290.0], [70.2, 1290.0], [70.3, 1291.0], [70.4, 1291.0], [70.5, 1291.0], [70.6, 1291.0], [70.7, 1292.0], [70.8, 1292.0], [70.9, 1292.0], [71.0, 1293.0], [71.1, 1293.0], [71.2, 1293.0], [71.3, 1293.0], [71.4, 1294.0], [71.5, 1294.0], [71.6, 1294.0], [71.7, 1294.0], [71.8, 1295.0], [71.9, 1295.0], [72.0, 1295.0], [72.1, 1295.0], [72.2, 1296.0], [72.3, 1296.0], [72.4, 1297.0], [72.5, 1297.0], [72.6, 1297.0], [72.7, 1298.0], [72.8, 1298.0], [72.9, 1299.0], [73.0, 1299.0], [73.1, 1299.0], [73.2, 1300.0], [73.3, 1300.0], [73.4, 1300.0], [73.5, 1301.0], [73.6, 1301.0], [73.7, 1301.0], [73.8, 1302.0], [73.9, 1302.0], [74.0, 1303.0], [74.1, 1303.0], [74.2, 1303.0], [74.3, 1304.0], [74.4, 1305.0], [74.5, 1305.0], [74.6, 1305.0], [74.7, 1305.0], [74.8, 1305.0], [74.9, 1306.0], [75.0, 1306.0], [75.1, 1306.0], [75.2, 1307.0], [75.3, 1307.0], [75.4, 1307.0], [75.5, 1308.0], [75.6, 1308.0], [75.7, 1308.0], [75.8, 1309.0], [75.9, 1309.0], [76.0, 1310.0], [76.1, 1310.0], [76.2, 1311.0], [76.3, 1311.0], [76.4, 1312.0], [76.5, 1312.0], [76.6, 1312.0], [76.7, 1312.0], [76.8, 1313.0], [76.9, 1313.0], [77.0, 1314.0], [77.1, 1314.0], [77.2, 1315.0], [77.3, 1315.0], [77.4, 1315.0], [77.5, 1316.0], [77.6, 1317.0], [77.7, 1317.0], [77.8, 1317.0], [77.9, 1318.0], [78.0, 1318.0], [78.1, 1319.0], [78.2, 1319.0], [78.3, 1319.0], [78.4, 1320.0], [78.5, 1320.0], [78.6, 1320.0], [78.7, 1321.0], [78.8, 1321.0], [78.9, 1322.0], [79.0, 1323.0], [79.1, 1323.0], [79.2, 1323.0], [79.3, 1324.0], [79.4, 1324.0], [79.5, 1324.0], [79.6, 1325.0], [79.7, 1325.0], [79.8, 1326.0], [79.9, 1326.0], [80.0, 1326.0], [80.1, 1327.0], [80.2, 1328.0], [80.3, 1328.0], [80.4, 1328.0], [80.5, 1329.0], [80.6, 1330.0], [80.7, 1330.0], [80.8, 1330.0], [80.9, 1331.0], [81.0, 1331.0], [81.1, 1332.0], [81.2, 1332.0], [81.3, 1333.0], [81.4, 1333.0], [81.5, 1333.0], [81.6, 1334.0], [81.7, 1334.0], [81.8, 1334.0], [81.9, 1335.0], [82.0, 1335.0], [82.1, 1336.0], [82.2, 1337.0], [82.3, 1337.0], [82.4, 1338.0], [82.5, 1338.0], [82.6, 1339.0], [82.7, 1339.0], [82.8, 1340.0], [82.9, 1340.0], [83.0, 1341.0], [83.1, 1341.0], [83.2, 1342.0], [83.3, 1343.0], [83.4, 1343.0], [83.5, 1344.0], [83.6, 1345.0], [83.7, 1345.0], [83.8, 1346.0], [83.9, 1347.0], [84.0, 1347.0], [84.1, 1348.0], [84.2, 1349.0], [84.3, 1350.0], [84.4, 1351.0], [84.5, 1352.0], [84.6, 1353.0], [84.7, 1353.0], [84.8, 1354.0], [84.9, 1354.0], [85.0, 1355.0], [85.1, 1356.0], [85.2, 1357.0], [85.3, 1357.0], [85.4, 1358.0], [85.5, 1358.0], [85.6, 1360.0], [85.7, 1362.0], [85.8, 1362.0], [85.9, 1363.0], [86.0, 1364.0], [86.1, 1365.0], [86.2, 1365.0], [86.3, 1367.0], [86.4, 1368.0], [86.5, 1368.0], [86.6, 1368.0], [86.7, 1369.0], [86.8, 1370.0], [86.9, 1372.0], [87.0, 1373.0], [87.1, 1374.0], [87.2, 1374.0], [87.3, 1375.0], [87.4, 1377.0], [87.5, 1378.0], [87.6, 1380.0], [87.7, 1382.0], [87.8, 1384.0], [87.9, 1385.0], [88.0, 1386.0], [88.1, 1386.0], [88.2, 1387.0], [88.3, 1388.0], [88.4, 1389.0], [88.5, 1390.0], [88.6, 1391.0], [88.7, 1392.0], [88.8, 1393.0], [88.9, 1395.0], [89.0, 1396.0], [89.1, 1397.0], [89.2, 1397.0], [89.3, 1400.0], [89.4, 1402.0], [89.5, 1405.0], [89.6, 1406.0], [89.7, 1407.0], [89.8, 1408.0], [89.9, 1410.0], [90.0, 1412.0], [90.1, 1414.0], [90.2, 1415.0], [90.3, 1418.0], [90.4, 1419.0], [90.5, 1420.0], [90.6, 1421.0], [90.7, 1422.0], [90.8, 1425.0], [90.9, 1427.0], [91.0, 1430.0], [91.1, 1434.0], [91.2, 1438.0], [91.3, 1440.0], [91.4, 1441.0], [91.5, 1446.0], [91.6, 1447.0], [91.7, 1455.0], [91.8, 1459.0], [91.9, 1460.0], [92.0, 1466.0], [92.1, 1471.0], [92.2, 1474.0], [92.3, 1479.0], [92.4, 1485.0], [92.5, 1489.0], [92.6, 1496.0], [92.7, 1509.0], [92.8, 1512.0], [92.9, 1517.0], [93.0, 1523.0], [93.1, 1528.0], [93.2, 1532.0], [93.3, 1547.0], [93.4, 1554.0], [93.5, 1562.0], [93.6, 1583.0], [93.7, 1593.0], [93.8, 1601.0], [93.9, 1603.0], [94.0, 1629.0], [94.1, 1693.0], [94.2, 1730.0], [94.3, 1742.0], [94.4, 1755.0], [94.5, 1782.0], [94.6, 1798.0], [94.7, 1804.0], [94.8, 1809.0], [94.9, 1818.0], [95.0, 1823.0], [95.1, 1832.0], [95.2, 1840.0], [95.3, 1847.0], [95.4, 1856.0], [95.5, 1861.0], [95.6, 1867.0], [95.7, 1883.0], [95.8, 1888.0], [95.9, 1893.0], [96.0, 1911.0], [96.1, 1920.0], [96.2, 1929.0], [96.3, 1943.0], [96.4, 1949.0], [96.5, 1957.0], [96.6, 1972.0], [96.7, 1996.0], [96.8, 2010.0], [96.9, 2028.0], [97.0, 2037.0], [97.1, 2043.0], [97.2, 2058.0], [97.3, 2065.0], [97.4, 2097.0], [97.5, 2131.0], [97.6, 2144.0], [97.7, 2170.0], [97.8, 2186.0], [97.9, 2200.0], [98.0, 2222.0], [98.1, 2232.0], [98.2, 2249.0], [98.3, 2268.0], [98.4, 2280.0], [98.5, 2318.0], [98.6, 2372.0], [98.7, 2429.0], [98.8, 2491.0], [98.9, 2653.0], [99.0, 2764.0], [99.1, 2861.0], [99.2, 2912.0], [99.3, 2986.0], [99.4, 3128.0], [99.5, 3258.0], [99.6, 3377.0], [99.7, 3586.0], [99.8, 4221.0], [99.9, 4382.0]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[0.0, 263.0], [0.1, 267.0], [0.2, 269.0], [0.3, 270.0], [0.4, 271.0], [0.5, 272.0], [0.6, 272.0], [0.7, 273.0], [0.8, 273.0], [0.9, 274.0], [1.0, 274.0], [1.1, 275.0], [1.2, 275.0], [1.3, 276.0], [1.4, 276.0], [1.5, 276.0], [1.6, 276.0], [1.7, 277.0], [1.8, 277.0], [1.9, 277.0], [2.0, 277.0], [2.1, 278.0], [2.2, 278.0], [2.3, 278.0], [2.4, 278.0], [2.5, 278.0], [2.6, 278.0], [2.7, 279.0], [2.8, 279.0], [2.9, 279.0], [3.0, 279.0], [3.1, 280.0], [3.2, 280.0], [3.3, 280.0], [3.4, 280.0], [3.5, 280.0], [3.6, 280.0], [3.7, 280.0], [3.8, 280.0], [3.9, 281.0], [4.0, 281.0], [4.1, 281.0], [4.2, 281.0], [4.3, 281.0], [4.4, 281.0], [4.5, 281.0], [4.6, 281.0], [4.7, 282.0], [4.8, 282.0], [4.9, 282.0], [5.0, 282.0], [5.1, 282.0], [5.2, 282.0], [5.3, 282.0], [5.4, 282.0], [5.5, 283.0], [5.6, 283.0], [5.7, 283.0], [5.8, 283.0], [5.9, 283.0], [6.0, 283.0], [6.1, 283.0], [6.2, 283.0], [6.3, 283.0], [6.4, 283.0], [6.5, 283.0], [6.6, 284.0], [6.7, 284.0], [6.8, 284.0], [6.9, 284.0], [7.0, 284.0], [7.1, 284.0], [7.2, 284.0], [7.3, 284.0], [7.4, 284.0], [7.5, 284.0], [7.6, 285.0], [7.7, 285.0], [7.8, 285.0], [7.9, 285.0], [8.0, 285.0], [8.1, 285.0], [8.2, 285.0], [8.3, 285.0], [8.4, 285.0], [8.5, 285.0], [8.6, 285.0], [8.7, 286.0], [8.8, 286.0], [8.9, 286.0], [9.0, 286.0], [9.1, 286.0], [9.2, 286.0], [9.3, 286.0], [9.4, 286.0], [9.5, 286.0], [9.6, 286.0], [9.7, 286.0], [9.8, 286.0], [9.9, 287.0], [10.0, 287.0], [10.1, 287.0], [10.2, 287.0], [10.3, 287.0], [10.4, 287.0], [10.5, 287.0], [10.6, 287.0], [10.7, 287.0], [10.8, 287.0], [10.9, 287.0], [11.0, 287.0], [11.1, 287.0], [11.2, 288.0], [11.3, 288.0], [11.4, 288.0], [11.5, 288.0], [11.6, 288.0], [11.7, 288.0], [11.8, 288.0], [11.9, 288.0], [12.0, 288.0], [12.1, 288.0], [12.2, 288.0], [12.3, 288.0], [12.4, 288.0], [12.5, 289.0], [12.6, 289.0], [12.7, 289.0], [12.8, 289.0], [12.9, 289.0], [13.0, 289.0], [13.1, 289.0], [13.2, 289.0], [13.3, 289.0], [13.4, 289.0], [13.5, 289.0], [13.6, 289.0], [13.7, 289.0], [13.8, 289.0], [13.9, 290.0], [14.0, 290.0], [14.1, 290.0], [14.2, 290.0], [14.3, 290.0], [14.4, 290.0], [14.5, 290.0], [14.6, 290.0], [14.7, 290.0], [14.8, 290.0], [14.9, 290.0], [15.0, 290.0], [15.1, 290.0], [15.2, 290.0], [15.3, 290.0], [15.4, 291.0], [15.5, 291.0], [15.6, 291.0], [15.7, 291.0], [15.8, 291.0], [15.9, 291.0], [16.0, 291.0], [16.1, 291.0], [16.2, 291.0], [16.3, 291.0], [16.4, 291.0], [16.5, 291.0], [16.6, 291.0], [16.7, 291.0], [16.8, 291.0], [16.9, 292.0], [17.0, 292.0], [17.1, 292.0], [17.2, 292.0], [17.3, 292.0], [17.4, 292.0], [17.5, 292.0], [17.6, 292.0], [17.7, 292.0], [17.8, 292.0], [17.9, 292.0], [18.0, 292.0], [18.1, 292.0], [18.2, 292.0], [18.3, 292.0], [18.4, 292.0], [18.5, 292.0], [18.6, 293.0], [18.7, 293.0], [18.8, 293.0], [18.9, 293.0], [19.0, 293.0], [19.1, 293.0], [19.2, 293.0], [19.3, 293.0], [19.4, 293.0], [19.5, 293.0], [19.6, 293.0], [19.7, 293.0], [19.8, 293.0], [19.9, 293.0], [20.0, 293.0], [20.1, 293.0], [20.2, 293.0], [20.3, 293.0], [20.4, 293.0], [20.5, 293.0], [20.6, 294.0], [20.7, 294.0], [20.8, 294.0], [20.9, 294.0], [21.0, 294.0], [21.1, 294.0], [21.2, 294.0], [21.3, 294.0], [21.4, 294.0], [21.5, 294.0], [21.6, 294.0], [21.7, 294.0], [21.8, 294.0], [21.9, 294.0], [22.0, 294.0], [22.1, 294.0], [22.2, 294.0], [22.3, 294.0], [22.4, 295.0], [22.5, 295.0], [22.6, 295.0], [22.7, 295.0], [22.8, 295.0], [22.9, 295.0], [23.0, 295.0], [23.1, 295.0], [23.2, 295.0], [23.3, 295.0], [23.4, 295.0], [23.5, 295.0], [23.6, 295.0], [23.7, 295.0], [23.8, 295.0], [23.9, 295.0], [24.0, 295.0], [24.1, 295.0], [24.2, 295.0], [24.3, 295.0], [24.4, 295.0], [24.5, 296.0], [24.6, 296.0], [24.7, 296.0], [24.8, 296.0], [24.9, 296.0], [25.0, 296.0], [25.1, 296.0], [25.2, 296.0], [25.3, 296.0], [25.4, 296.0], [25.5, 296.0], [25.6, 296.0], [25.7, 296.0], [25.8, 296.0], [25.9, 296.0], [26.0, 296.0], [26.1, 296.0], [26.2, 296.0], [26.3, 296.0], [26.4, 296.0], [26.5, 296.0], [26.6, 297.0], [26.7, 297.0], [26.8, 297.0], [26.9, 297.0], [27.0, 297.0], [27.1, 297.0], [27.2, 297.0], [27.3, 297.0], [27.4, 297.0], [27.5, 297.0], [27.6, 297.0], [27.7, 297.0], [27.8, 297.0], [27.9, 297.0], [28.0, 297.0], [28.1, 297.0], [28.2, 297.0], [28.3, 297.0], [28.4, 297.0], [28.5, 297.0], [28.6, 297.0], [28.7, 297.0], [28.8, 297.0], [28.9, 298.0], [29.0, 298.0], [29.1, 298.0], [29.2, 298.0], [29.3, 298.0], [29.4, 298.0], [29.5, 298.0], [29.6, 298.0], [29.7, 298.0], [29.8, 298.0], [29.9, 298.0], [30.0, 298.0], [30.1, 298.0], [30.2, 298.0], [30.3, 298.0], [30.4, 298.0], [30.5, 298.0], [30.6, 298.0], [30.7, 298.0], [30.8, 298.0], [30.9, 298.0], [31.0, 298.0], [31.1, 298.0], [31.2, 299.0], [31.3, 299.0], [31.4, 299.0], [31.5, 299.0], [31.6, 299.0], [31.7, 299.0], [31.8, 299.0], [31.9, 299.0], [32.0, 299.0], [32.1, 299.0], [32.2, 299.0], [32.3, 299.0], [32.4, 299.0], [32.5, 299.0], [32.6, 299.0], [32.7, 299.0], [32.8, 299.0], [32.9, 299.0], [33.0, 299.0], [33.1, 299.0], [33.2, 299.0], [33.3, 300.0], [33.4, 300.0], [33.5, 300.0], [33.6, 300.0], [33.7, 300.0], [33.8, 300.0], [33.9, 300.0], [34.0, 300.0], [34.1, 300.0], [34.2, 300.0], [34.3, 300.0], [34.4, 300.0], [34.5, 300.0], [34.6, 300.0], [34.7, 300.0], [34.8, 300.0], [34.9, 300.0], [35.0, 300.0], [35.1, 300.0], [35.2, 300.0], [35.3, 301.0], [35.4, 301.0], [35.5, 301.0], [35.6, 301.0], [35.7, 301.0], [35.8, 301.0], [35.9, 301.0], [36.0, 301.0], [36.1, 301.0], [36.2, 301.0], [36.3, 301.0], [36.4, 301.0], [36.5, 301.0], [36.6, 301.0], [36.7, 301.0], [36.8, 301.0], [36.9, 301.0], [37.0, 301.0], [37.1, 301.0], [37.2, 301.0], [37.3, 301.0], [37.4, 302.0], [37.5, 302.0], [37.6, 302.0], [37.7, 302.0], [37.8, 302.0], [37.9, 302.0], [38.0, 302.0], [38.1, 302.0], [38.2, 302.0], [38.3, 302.0], [38.4, 302.0], [38.5, 302.0], [38.6, 302.0], [38.7, 302.0], [38.8, 302.0], [38.9, 302.0], [39.0, 302.0], [39.1, 302.0], [39.2, 302.0], [39.3, 302.0], [39.4, 302.0], [39.5, 303.0], [39.6, 303.0], [39.7, 303.0], [39.8, 303.0], [39.9, 303.0], [40.0, 303.0], [40.1, 303.0], [40.2, 303.0], [40.3, 303.0], [40.4, 303.0], [40.5, 303.0], [40.6, 303.0], [40.7, 303.0], [40.8, 303.0], [40.9, 303.0], [41.0, 303.0], [41.1, 303.0], [41.2, 303.0], [41.3, 303.0], [41.4, 303.0], [41.5, 303.0], [41.6, 303.0], [41.7, 303.0], [41.8, 304.0], [41.9, 304.0], [42.0, 304.0], [42.1, 304.0], [42.2, 304.0], [42.3, 304.0], [42.4, 304.0], [42.5, 304.0], [42.6, 304.0], [42.7, 304.0], [42.8, 304.0], [42.9, 304.0], [43.0, 304.0], [43.1, 304.0], [43.2, 304.0], [43.3, 304.0], [43.4, 304.0], [43.5, 304.0], [43.6, 304.0], [43.7, 304.0], [43.8, 304.0], [43.9, 304.0], [44.0, 304.0], [44.1, 305.0], [44.2, 305.0], [44.3, 305.0], [44.4, 305.0], [44.5, 305.0], [44.6, 305.0], [44.7, 305.0], [44.8, 305.0], [44.9, 305.0], [45.0, 305.0], [45.1, 305.0], [45.2, 305.0], [45.3, 305.0], [45.4, 305.0], [45.5, 305.0], [45.6, 305.0], [45.7, 305.0], [45.8, 305.0], [45.9, 305.0], [46.0, 305.0], [46.1, 306.0], [46.2, 306.0], [46.3, 306.0], [46.4, 306.0], [46.5, 306.0], [46.6, 306.0], [46.7, 306.0], [46.8, 306.0], [46.9, 306.0], [47.0, 306.0], [47.1, 306.0], [47.2, 306.0], [47.3, 306.0], [47.4, 306.0], [47.5, 306.0], [47.6, 306.0], [47.7, 306.0], [47.8, 306.0], [47.9, 306.0], [48.0, 306.0], [48.1, 306.0], [48.2, 306.0], [48.3, 307.0], [48.4, 307.0], [48.5, 307.0], [48.6, 307.0], [48.7, 307.0], [48.8, 307.0], [48.9, 307.0], [49.0, 307.0], [49.1, 307.0], [49.2, 307.0], [49.3, 307.0], [49.4, 307.0], [49.5, 307.0], [49.6, 307.0], [49.7, 307.0], [49.8, 307.0], [49.9, 307.0], [50.0, 307.0], [50.1, 307.0], [50.2, 307.0], [50.3, 307.0], [50.4, 307.0], [50.5, 307.0], [50.6, 307.0], [50.7, 308.0], [50.8, 308.0], [50.9, 308.0], [51.0, 308.0], [51.1, 308.0], [51.2, 308.0], [51.3, 308.0], [51.4, 308.0], [51.5, 308.0], [51.6, 308.0], [51.7, 308.0], [51.8, 308.0], [51.9, 308.0], [52.0, 308.0], [52.1, 308.0], [52.2, 308.0], [52.3, 308.0], [52.4, 308.0], [52.5, 308.0], [52.6, 308.0], [52.7, 308.0], [52.8, 308.0], [52.9, 309.0], [53.0, 309.0], [53.1, 309.0], [53.2, 309.0], [53.3, 309.0], [53.4, 309.0], [53.5, 309.0], [53.6, 309.0], [53.7, 309.0], [53.8, 309.0], [53.9, 309.0], [54.0, 309.0], [54.1, 309.0], [54.2, 309.0], [54.3, 309.0], [54.4, 309.0], [54.5, 309.0], [54.6, 309.0], [54.7, 309.0], [54.8, 309.0], [54.9, 309.0], [55.0, 309.0], [55.1, 309.0], [55.2, 310.0], [55.3, 310.0], [55.4, 310.0], [55.5, 310.0], [55.6, 310.0], [55.7, 310.0], [55.8, 310.0], [55.9, 310.0], [56.0, 310.0], [56.1, 310.0], [56.2, 310.0], [56.3, 310.0], [56.4, 310.0], [56.5, 310.0], [56.6, 310.0], [56.7, 310.0], [56.8, 310.0], [56.9, 310.0], [57.0, 310.0], [57.1, 311.0], [57.2, 311.0], [57.3, 311.0], [57.4, 311.0], [57.5, 311.0], [57.6, 311.0], [57.7, 311.0], [57.8, 311.0], [57.9, 311.0], [58.0, 311.0], [58.1, 311.0], [58.2, 311.0], [58.3, 311.0], [58.4, 311.0], [58.5, 311.0], [58.6, 311.0], [58.7, 311.0], [58.8, 311.0], [58.9, 311.0], [59.0, 311.0], [59.1, 312.0], [59.2, 312.0], [59.3, 312.0], [59.4, 312.0], [59.5, 312.0], [59.6, 312.0], [59.7, 312.0], [59.8, 312.0], [59.9, 312.0], [60.0, 312.0], [60.1, 312.0], [60.2, 312.0], [60.3, 312.0], [60.4, 312.0], [60.5, 312.0], [60.6, 312.0], [60.7, 312.0], [60.8, 312.0], [60.9, 312.0], [61.0, 312.0], [61.1, 312.0], [61.2, 313.0], [61.3, 313.0], [61.4, 313.0], [61.5, 313.0], [61.6, 313.0], [61.7, 313.0], [61.8, 313.0], [61.9, 313.0], [62.0, 313.0], [62.1, 313.0], [62.2, 313.0], [62.3, 313.0], [62.4, 313.0], [62.5, 313.0], [62.6, 313.0], [62.7, 313.0], [62.8, 313.0], [62.9, 313.0], [63.0, 313.0], [63.1, 313.0], [63.2, 314.0], [63.3, 314.0], [63.4, 314.0], [63.5, 314.0], [63.6, 314.0], [63.7, 314.0], [63.8, 314.0], [63.9, 314.0], [64.0, 314.0], [64.1, 314.0], [64.2, 314.0], [64.3, 314.0], [64.4, 314.0], [64.5, 314.0], [64.6, 314.0], [64.7, 314.0], [64.8, 314.0], [64.9, 315.0], [65.0, 315.0], [65.1, 315.0], [65.2, 315.0], [65.3, 315.0], [65.4, 315.0], [65.5, 315.0], [65.6, 315.0], [65.7, 315.0], [65.8, 315.0], [65.9, 315.0], [66.0, 315.0], [66.1, 315.0], [66.2, 315.0], [66.3, 315.0], [66.4, 315.0], [66.5, 315.0], [66.6, 315.0], [66.7, 316.0], [66.8, 316.0], [66.9, 316.0], [67.0, 316.0], [67.1, 316.0], [67.2, 316.0], [67.3, 316.0], [67.4, 316.0], [67.5, 316.0], [67.6, 316.0], [67.7, 316.0], [67.8, 316.0], [67.9, 316.0], [68.0, 316.0], [68.1, 316.0], [68.2, 316.0], [68.3, 316.0], [68.4, 316.0], [68.5, 317.0], [68.6, 317.0], [68.7, 317.0], [68.8, 317.0], [68.9, 317.0], [69.0, 317.0], [69.1, 317.0], [69.2, 317.0], [69.3, 317.0], [69.4, 317.0], [69.5, 317.0], [69.6, 317.0], [69.7, 317.0], [69.8, 317.0], [69.9, 318.0], [70.0, 318.0], [70.1, 318.0], [70.2, 318.0], [70.3, 318.0], [70.4, 318.0], [70.5, 318.0], [70.6, 318.0], [70.7, 318.0], [70.8, 318.0], [70.9, 318.0], [71.0, 318.0], [71.1, 318.0], [71.2, 318.0], [71.3, 318.0], [71.4, 318.0], [71.5, 319.0], [71.6, 319.0], [71.7, 319.0], [71.8, 319.0], [71.9, 319.0], [72.0, 319.0], [72.1, 319.0], [72.2, 319.0], [72.3, 319.0], [72.4, 319.0], [72.5, 319.0], [72.6, 319.0], [72.7, 319.0], [72.8, 319.0], [72.9, 319.0], [73.0, 319.0], [73.1, 320.0], [73.2, 320.0], [73.3, 320.0], [73.4, 320.0], [73.5, 320.0], [73.6, 320.0], [73.7, 320.0], [73.8, 320.0], [73.9, 320.0], [74.0, 320.0], [74.1, 320.0], [74.2, 320.0], [74.3, 320.0], [74.4, 320.0], [74.5, 321.0], [74.6, 321.0], [74.7, 321.0], [74.8, 321.0], [74.9, 321.0], [75.0, 321.0], [75.1, 321.0], [75.2, 321.0], [75.3, 321.0], [75.4, 321.0], [75.5, 321.0], [75.6, 321.0], [75.7, 322.0], [75.8, 322.0], [75.9, 322.0], [76.0, 322.0], [76.1, 322.0], [76.2, 322.0], [76.3, 322.0], [76.4, 322.0], [76.5, 322.0], [76.6, 322.0], [76.7, 322.0], [76.8, 322.0], [76.9, 323.0], [77.0, 323.0], [77.1, 323.0], [77.2, 323.0], [77.3, 323.0], [77.4, 323.0], [77.5, 323.0], [77.6, 323.0], [77.7, 323.0], [77.8, 323.0], [77.9, 323.0], [78.0, 323.0], [78.1, 324.0], [78.2, 324.0], [78.3, 324.0], [78.4, 324.0], [78.5, 324.0], [78.6, 324.0], [78.7, 324.0], [78.8, 324.0], [78.9, 324.0], [79.0, 324.0], [79.1, 325.0], [79.2, 325.0], [79.3, 325.0], [79.4, 325.0], [79.5, 325.0], [79.6, 325.0], [79.7, 325.0], [79.8, 325.0], [79.9, 325.0], [80.0, 326.0], [80.1, 326.0], [80.2, 326.0], [80.3, 326.0], [80.4, 326.0], [80.5, 326.0], [80.6, 326.0], [80.7, 326.0], [80.8, 326.0], [80.9, 327.0], [81.0, 327.0], [81.1, 327.0], [81.2, 327.0], [81.3, 327.0], [81.4, 327.0], [81.5, 327.0], [81.6, 327.0], [81.7, 327.0], [81.8, 328.0], [81.9, 328.0], [82.0, 328.0], [82.1, 328.0], [82.2, 328.0], [82.3, 328.0], [82.4, 328.0], [82.5, 328.0], [82.6, 329.0], [82.7, 329.0], [82.8, 329.0], [82.9, 329.0], [83.0, 329.0], [83.1, 329.0], [83.2, 329.0], [83.3, 330.0], [83.4, 330.0], [83.5, 330.0], [83.6, 330.0], [83.7, 330.0], [83.8, 330.0], [83.9, 331.0], [84.0, 331.0], [84.1, 331.0], [84.2, 331.0], [84.3, 331.0], [84.4, 331.0], [84.5, 332.0], [84.6, 332.0], [84.7, 332.0], [84.8, 332.0], [84.9, 332.0], [85.0, 332.0], [85.1, 332.0], [85.2, 333.0], [85.3, 333.0], [85.4, 333.0], [85.5, 333.0], [85.6, 333.0], [85.7, 334.0], [85.8, 334.0], [85.9, 334.0], [86.0, 334.0], [86.1, 334.0], [86.2, 335.0], [86.3, 335.0], [86.4, 335.0], [86.5, 335.0], [86.6, 335.0], [86.7, 335.0], [86.8, 336.0], [86.9, 336.0], [87.0, 336.0], [87.1, 336.0], [87.2, 336.0], [87.3, 336.0], [87.4, 337.0], [87.5, 337.0], [87.6, 337.0], [87.7, 337.0], [87.8, 337.0], [87.9, 338.0], [88.0, 338.0], [88.1, 338.0], [88.2, 338.0], [88.3, 339.0], [88.4, 339.0], [88.5, 339.0], [88.6, 340.0], [88.7, 340.0], [88.8, 340.0], [88.9, 341.0], [89.0, 341.0], [89.1, 341.0], [89.2, 342.0], [89.3, 342.0], [89.4, 342.0], [89.5, 342.0], [89.6, 343.0], [89.7, 343.0], [89.8, 344.0], [89.9, 344.0], [90.0, 344.0], [90.1, 345.0], [90.2, 345.0], [90.3, 346.0], [90.4, 346.0], [90.5, 347.0], [90.6, 347.0], [90.7, 348.0], [90.8, 348.0], [90.9, 349.0], [91.0, 349.0], [91.1, 349.0], [91.2, 350.0], [91.3, 351.0], [91.4, 351.0], [91.5, 351.0], [91.6, 352.0], [91.7, 352.0], [91.8, 353.0], [91.9, 353.0], [92.0, 354.0], [92.1, 354.0], [92.2, 355.0], [92.3, 355.0], [92.4, 356.0], [92.5, 356.0], [92.6, 357.0], [92.7, 357.0], [92.8, 358.0], [92.9, 359.0], [93.0, 359.0], [93.1, 360.0], [93.2, 361.0], [93.3, 362.0], [93.4, 363.0], [93.5, 363.0], [93.6, 364.0], [93.7, 365.0], [93.8, 366.0], [93.9, 367.0], [94.0, 367.0], [94.1, 368.0], [94.2, 369.0], [94.3, 370.0], [94.4, 370.0], [94.5, 371.0], [94.6, 372.0], [94.7, 372.0], [94.8, 373.0], [94.9, 375.0], [95.0, 376.0], [95.1, 377.0], [95.2, 378.0], [95.3, 379.0], [95.4, 380.0], [95.5, 382.0], [95.6, 383.0], [95.7, 384.0], [95.8, 385.0], [95.9, 386.0], [96.0, 387.0], [96.1, 388.0], [96.2, 390.0], [96.3, 392.0], [96.4, 394.0], [96.5, 395.0], [96.6, 396.0], [96.7, 398.0], [96.8, 400.0], [96.9, 401.0], [97.0, 404.0], [97.1, 406.0], [97.2, 408.0], [97.3, 411.0], [97.4, 415.0], [97.5, 418.0], [97.6, 422.0], [97.7, 424.0], [97.8, 432.0], [97.9, 434.0], [98.0, 439.0], [98.1, 448.0], [98.2, 452.0], [98.3, 467.0], [98.4, 480.0], [98.5, 500.0], [98.6, 543.0], [98.7, 636.0], [98.8, 717.0], [98.9, 734.0], [99.0, 807.0], [99.1, 850.0], [99.2, 908.0], [99.3, 929.0], [99.4, 952.0], [99.5, 994.0], [99.6, 1007.0], [99.7, 1045.0], [99.8, 1123.0], [99.9, 1643.0], [100.0, 6311.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 5965.0, "series": [{"data": [[600.0, 1.0], [700.0, 19.0], [200.0, 1221.0], [800.0, 14.0], [3300.0, 1.0], [900.0, 14.0], [1000.0, 11.0], [1100.0, 2.0], [300.0, 3308.0], [1500.0, 2.0], [400.0, 94.0], [1800.0, 1.0], [500.0, 7.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[600.0, 9.0], [700.0, 17.0], [200.0, 1183.0], [800.0, 11.0], [3300.0, 3.0], [900.0, 16.0], [1000.0, 5.0], [1100.0, 1.0], [300.0, 3351.0], [1200.0, 1.0], [1300.0, 2.0], [1400.0, 1.0], [400.0, 85.0], [7300.0, 1.0], [500.0, 9.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[600.0, 2.0], [700.0, 7.0], [200.0, 1414.0], [800.0, 9.0], [3300.0, 3.0], [900.0, 6.0], [1000.0, 12.0], [1100.0, 11.0], [300.0, 3147.0], [1200.0, 2.0], [400.0, 73.0], [1700.0, 2.0], [500.0, 7.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1000.0, 3.0], [1100.0, 1094.0], [1200.0, 2336.0], [1300.0, 757.0], [1400.0, 159.0], [1500.0, 52.0], [1600.0, 17.0], [1700.0, 24.0], [1800.0, 62.0], [1900.0, 37.0], [2000.0, 32.0], [2100.0, 23.0], [2200.0, 24.0], [2300.0, 11.0], [2400.0, 8.0], [2500.0, 4.0], [2600.0, 2.0], [2800.0, 6.0], [2700.0, 6.0], [2900.0, 6.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 4.0], [3300.0, 4.0], [3400.0, 2.0], [3500.0, 1.0], [3700.0, 3.0], [3800.0, 1.0], [4200.0, 2.0], [4300.0, 5.0], [4500.0, 1.0], [5000.0, 1.0], [5900.0, 1.0]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[600.0, 8.0], [700.0, 24.0], [200.0, 3124.0], [800.0, 18.0], [3300.0, 5.0], [900.0, 33.0], [1000.0, 21.0], [4300.0, 1.0], [1100.0, 8.0], [300.0, 5965.0], [1200.0, 2.0], [1500.0, 1.0], [6300.0, 1.0], [6200.0, 1.0], [400.0, 160.0], [1600.0, 2.0], [1700.0, 1.0], [500.0, 15.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 7300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 38.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 23105.0, "series": [{"data": [[0.0, 23105.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4670.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 357.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 38.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 22.25998463901692, "minX": 1.69514478E12, "maxY": 25.641462548810797, "series": [{"data": [[1.69514496E12, 22.35686413621849], [1.69514514E12, 22.269313304720956], [1.69514484E12, 23.53714895129755], [1.69514532E12, 23.155049786628748], [1.69514502E12, 22.834460662157355], [1.6951452E12, 23.873319179051624], [1.6951449E12, 22.476156583629905], [1.69514538E12, 22.25998463901692], [1.69514508E12, 22.588486140724942], [1.69514478E12, 22.52399999999999], [1.69514526E12, 25.641462548810797]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69514538E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 280.0, "minX": 1.0, "maxY": 2859.65, "series": [{"data": [[32.0, 301.75], [33.0, 311.0], [34.0, 337.0], [35.0, 307.0], [41.0, 313.0], [43.0, 323.0], [42.0, 341.0], [45.0, 312.5], [44.0, 307.5], [47.0, 323.0], [49.0, 316.0], [48.0, 324.0], [51.0, 1064.0], [50.0, 312.7], [7.0, 313.0], [9.0, 305.5], [10.0, 320.5], [11.0, 309.0], [12.0, 297.5], [13.0, 307.0], [16.0, 311.5], [18.0, 318.0], [19.0, 302.0], [20.0, 301.83333333333326], [21.0, 310.7608346709474], [22.0, 315.76656151419485], [23.0, 325.0618066561012], [24.0, 334.0226415094339], [25.0, 336.0784313725493], [26.0, 363.84090909090935], [27.0, 357.7857142857144], [28.0, 351.04347826086956], [29.0, 513.8], [30.0, 374.92857142857144], [31.0, 309.5]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[23.0408945686901, 324.67199148029755]], "isOverall": false, "label": "Update Booking-Aggregated", "isController": false}, {"data": [[2.0, 304.0], [3.0, 294.0], [4.0, 295.0], [5.0, 300.0], [6.0, 326.0], [7.0, 321.0], [8.0, 294.0], [9.0, 323.0], [10.0, 299.0], [11.0, 309.0], [12.0, 307.0], [13.0, 315.0], [14.0, 334.0], [15.0, 322.0], [16.0, 309.0], [17.0, 335.0], [18.0, 298.0], [19.0, 305.0], [20.0, 294.625], [21.0, 300.32095490716176], [22.0, 311.4883040935671], [23.0, 319.000713266762], [24.0, 333.52083333333337], [25.0, 340.19960474308294], [26.0, 341.65248226950365], [27.0, 401.9245283018868], [28.0, 384.1363636363636], [29.0, 460.09090909090907], [30.0, 430.6666666666667], [31.0, 349.375], [33.0, 296.5], [32.0, 306.0], [35.0, 315.0], [34.0, 349.0], [37.0, 386.0], [36.0, 361.0], [39.0, 622.0], [41.0, 323.0], [40.0, 385.0], [43.0, 320.0], [42.0, 327.5], [45.0, 306.5], [44.0, 309.0], [47.0, 315.5], [46.0, 356.0], [49.0, 305.0], [48.0, 299.0], [51.0, 1614.2857142857142], [50.0, 430.0], [1.0, 315.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[23.404472843450478, 326.45921192758345]], "isOverall": false, "label": "Delete Booking-Aggregated", "isController": false}, {"data": [[32.0, 306.0], [34.0, 342.5], [37.0, 420.0], [41.0, 313.0], [44.0, 315.0], [45.0, 303.0], [47.0, 332.0], [49.0, 317.25], [48.0, 328.5], [50.0, 845.3529411764706], [51.0, 318.0833333333333], [11.0, 308.0], [12.0, 310.0], [14.0, 329.0], [15.0, 314.0], [16.0, 320.0], [17.0, 305.0], [18.0, 295.8888888888889], [19.0, 317.0], [20.0, 303.76056338028155], [21.0, 307.27007299270105], [22.0, 314.6859177215191], [23.0, 319.819267515924], [24.0, 333.41742522756823], [25.0, 333.1529411764706], [26.0, 342.5108695652174], [27.0, 351.0882352941176], [28.0, 319.2105263157895], [29.0, 437.15384615384613], [30.0, 384.3636363636364], [31.0, 530.8333333333334]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[23.02662406815756, 322.5889243876468]], "isOverall": false, "label": "Create Booking-Aggregated", "isController": false}, {"data": [[32.0, 1159.0], [33.0, 1333.0], [34.0, 1328.0], [37.0, 1301.0], [41.0, 1249.0], [42.0, 1271.0], [44.0, 1231.0], [47.0, 1237.0], [49.0, 2032.25], [48.0, 2804.0], [50.0, 2859.65], [51.0, 2539.0909090909095], [13.0, 1235.0], [15.0, 1496.0], [16.0, 1336.3333333333333], [17.0, 1231.5], [18.0, 1096.0], [19.0, 1209.25], [20.0, 1228.5966386554621], [21.0, 1235.9922958397526], [22.0, 1271.3320610687042], [23.0, 1315.4297905353], [24.0, 1340.901028277635], [25.0, 1363.5849673202617], [26.0, 1429.078651685393], [27.0, 1430.2424242424242], [28.0, 1683.76], [29.0, 1579.8], [30.0, 1693.9285714285716], [31.0, 1219.3333333333333]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[23.03706070287537, 1314.7243876464283]], "isOverall": false, "label": "Token-Aggregated", "isController": false}, {"data": [[32.0, 306.25], [33.0, 280.0], [34.0, 327.0], [35.0, 311.0], [36.0, 387.3333333333333], [37.0, 370.3333333333333], [39.0, 405.5], [41.0, 327.0], [43.0, 313.5], [42.0, 313.0], [45.0, 338.0], [44.0, 307.2], [47.0, 336.5], [46.0, 341.0], [49.0, 1014.1], [48.0, 310.25], [3.0, 295.0], [50.0, 670.56], [51.0, 584.2727272727274], [6.0, 301.0], [7.0, 308.6666666666667], [9.0, 308.5], [10.0, 299.25], [11.0, 652.0], [12.0, 308.0], [13.0, 304.0], [14.0, 327.0], [15.0, 298.0], [16.0, 303.3333333333333], [17.0, 344.0], [18.0, 305.5], [19.0, 296.0], [20.0, 305.0171232876712], [21.0, 305.5737704918036], [22.0, 313.472165786266], [23.0, 317.90703125000005], [24.0, 329.3750798722042], [25.0, 329.2345323741008], [26.0, 362.90222222222224], [27.0, 349.805194805195], [28.0, 362.6818181818182], [29.0, 676.2], [30.0, 662.9615384615385], [31.0, 432.4545454545455]], "isOverall": false, "label": "Get Booking", "isController": false}, {"data": [[23.04994675186363, 323.2792332268365]], "isOverall": false, "label": "Get Booking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 51.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1370.6666666666667, "minX": 1.69514478E12, "maxY": 17377.633333333335, "series": [{"data": [[1.69514496E12, 17304.0], [1.69514514E12, 17161.8], [1.69514484E12, 17261.416666666668], [1.69514532E12, 17260.833333333332], [1.69514502E12, 17245.283333333333], [1.6951452E12, 17377.633333333335], [1.6951449E12, 17255.55], [1.69514538E12, 15979.8], [1.69514508E12, 17278.05], [1.69514478E12, 1540.1], [1.69514526E12, 17235.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69514496E12, 15658.433333333332], [1.69514514E12, 15529.8], [1.69514484E12, 15634.533333333333], [1.69514532E12, 15606.433333333332], [1.69514502E12, 15607.15], [1.6951452E12, 15701.916666666666], [1.6951449E12, 15611.316666666668], [1.69514538E12, 14477.25], [1.69514508E12, 15629.7], [1.69514478E12, 1370.6666666666667], [1.69514526E12, 15633.3]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69514538E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 309.05901287553706, "minX": 1.69514478E12, "maxY": 1446.6411889596602, "series": [{"data": [[1.69514496E12, 317.58848614072514], [1.69514514E12, 319.25376344086], [1.69514484E12, 329.95299145299094], [1.69514532E12, 329.15744680851066], [1.69514502E12, 322.36111111111086], [1.6951452E12, 339.52754237288144], [1.6951449E12, 318.3255319148937], [1.69514538E12, 315.6336405529954], [1.69514508E12, 318.7531914893619], [1.69514478E12, 332.4249999999999], [1.69514526E12, 334.7121535181234]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.69514496E12, 315.4203821656049], [1.69514514E12, 318.3540772532192], [1.69514484E12, 331.69703389830505], [1.69514532E12, 326.9509594882729], [1.69514502E12, 315.29487179487165], [1.6951452E12, 336.24101479915424], [1.6951449E12, 318.9012875536483], [1.69514538E12, 316.6159090909091], [1.69514508E12, 317.07922912205566], [1.69514478E12, 323.5294117647059], [1.69514526E12, 367.4072494669513]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.69514496E12, 312.95735607675886], [1.69514514E12, 311.44849785407735], [1.69514484E12, 327.29059829059827], [1.69514532E12, 323.35470085470087], [1.69514502E12, 320.8827292110871], [1.6951452E12, 337.9553191489366], [1.6951449E12, 318.7313432835819], [1.69514538E12, 311.9071925754059], [1.69514508E12, 317.2153518123666], [1.69514478E12, 311.60869565217394], [1.69514526E12, 344.21914893617]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.69514496E12, 1267.1172707889118], [1.69514514E12, 1269.9207708779434], [1.69514484E12, 1339.75641025641], [1.69514532E12, 1311.7087794432534], [1.69514502E12, 1300.2991452991455], [1.6951452E12, 1357.2692307692312], [1.6951449E12, 1271.3496801705753], [1.69514538E12, 1298.8881118881106], [1.69514508E12, 1281.0297872340427], [1.69514478E12, 1327.4693877551022], [1.69514526E12, 1446.6411889596602]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.69514496E12, 314.25504782146663], [1.69514514E12, 309.05901287553706], [1.69514484E12, 330.2070437566703], [1.69514532E12, 325.4840085287848], [1.69514502E12, 319.8685897435894], [1.6951452E12, 326.6574761399789], [1.6951449E12, 315.5438034188033], [1.69514538E12, 315.14712643678126], [1.69514508E12, 317.4648187633259], [1.69514478E12, 312.46913580246905], [1.69514526E12, 359.3528784648191]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69514538E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 309.05579399141624, "minX": 1.69514478E12, "maxY": 1446.6411889596602, "series": [{"data": [[1.69514496E12, 317.58422174840103], [1.69514514E12, 319.25376344086], [1.69514484E12, 329.9380341880341], [1.69514532E12, 329.1553191489361], [1.69514502E12, 322.3589743589744], [1.6951452E12, 339.5254237288139], [1.6951449E12, 318.314893617021], [1.69514538E12, 315.6336405529954], [1.69514508E12, 318.7510638297873], [1.69514478E12, 332.39999999999986], [1.69514526E12, 334.7078891257998]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.69514496E12, 315.41613588110397], [1.69514514E12, 318.3476394849787], [1.69514484E12, 331.68855932203394], [1.69514532E12, 326.9509594882729], [1.69514502E12, 315.2884615384618], [1.6951452E12, 336.24101479915424], [1.6951449E12, 318.89699570815475], [1.69514538E12, 316.61363636363626], [1.69514508E12, 317.07494646680954], [1.69514478E12, 323.47058823529403], [1.69514526E12, 367.398720682303]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.69514496E12, 312.9552238805971], [1.69514514E12, 311.44849785407735], [1.69514484E12, 327.2863247863248], [1.69514532E12, 323.3482905982907], [1.69514502E12, 320.8827292110871], [1.6951452E12, 337.9553191489366], [1.6951449E12, 318.7270788912581], [1.69514538E12, 311.9048723897915], [1.69514508E12, 317.2153518123666], [1.69514478E12, 311.5869565217391], [1.69514526E12, 344.2170212765957]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.69514496E12, 1267.1130063965886], [1.69514514E12, 1269.9143468950735], [1.69514484E12, 1339.752136752136], [1.69514532E12, 1311.706638115631], [1.69514502E12, 1300.2970085470092], [1.6951452E12, 1344.5790598290596], [1.6951449E12, 1271.3454157782521], [1.69514538E12, 1298.88578088578], [1.69514508E12, 1281.0276595744679], [1.69514478E12, 1327.2448979591836], [1.69514526E12, 1446.6411889596602]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.69514496E12, 314.24973432518567], [1.69514514E12, 309.05579399141624], [1.69514484E12, 330.1953041622197], [1.69514532E12, 325.4818763326231], [1.69514502E12, 319.86645299145334], [1.6951452E12, 326.6553552492043], [1.6951449E12, 315.5384615384615], [1.69514538E12, 315.14712643678126], [1.69514508E12, 317.46375266524547], [1.69514478E12, 312.43209876543216], [1.69514526E12, 359.35181236673776]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69514538E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.69514478E12, "maxY": 1010.9722222222214, "series": [{"data": [[1.69514496E12, 0.0], [1.69514514E12, 0.0], [1.69514484E12, 0.0], [1.69514532E12, 0.0], [1.69514502E12, 0.0], [1.6951452E12, 0.0], [1.6951449E12, 0.0], [1.69514538E12, 0.0], [1.69514508E12, 0.0], [1.69514478E12, 0.0], [1.69514526E12, 0.0]], "isOverall": false, "label": "Update Booking", "isController": false}, {"data": [[1.69514496E12, 0.0], [1.69514514E12, 0.0], [1.69514484E12, 0.0], [1.69514532E12, 0.0], [1.69514502E12, 0.0], [1.6951452E12, 0.0], [1.6951449E12, 0.0], [1.69514538E12, 0.0], [1.69514508E12, 0.0], [1.69514478E12, 0.0], [1.69514526E12, 0.0]], "isOverall": false, "label": "Delete Booking", "isController": false}, {"data": [[1.69514496E12, 0.0], [1.69514514E12, 0.0], [1.69514484E12, 0.0], [1.69514532E12, 0.0], [1.69514502E12, 0.0], [1.6951452E12, 2.04468085106383], [1.6951449E12, 0.0], [1.69514538E12, 0.0], [1.69514508E12, 0.0], [1.69514478E12, 0.0], [1.69514526E12, 0.0]], "isOverall": false, "label": "Create Booking", "isController": false}, {"data": [[1.69514496E12, 950.1236673773984], [1.69514514E12, 957.815845824411], [1.69514484E12, 1010.9722222222214], [1.69514532E12, 990.6680942184149], [1.69514502E12, 974.8717948717951], [1.6951452E12, 1006.3141025641025], [1.6951449E12, 953.991471215352], [1.69514538E12, 972.3869463869463], [1.69514508E12, 963.0723404255318], [1.69514478E12, 1008.6530612244898], [1.69514526E12, 1003.1167728237795]], "isOverall": false, "label": "Token", "isController": false}, {"data": [[1.69514496E12, 0.0], [1.69514514E12, 0.0], [1.69514484E12, 0.0], [1.69514532E12, 0.0], [1.69514502E12, 0.0], [1.6951452E12, 0.0], [1.6951449E12, 0.0], [1.69514538E12, 0.0], [1.69514508E12, 0.0], [1.69514478E12, 0.0], [1.69514526E12, 0.0]], "isOverall": false, "label": "Get Booking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69514538E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 263.0, "minX": 1.69514478E12, "maxY": 5013.0, "series": [{"data": [[1.69514496E12, 3315.0], [1.69514514E12, 3777.0], [1.69514484E12, 3482.0], [1.69514532E12, 3128.0], [1.69514502E12, 3758.0], [1.6951452E12, 3188.0], [1.6951449E12, 2915.0], [1.69514538E12, 3894.0], [1.69514508E12, 3586.0], [1.69514478E12, 2166.0], [1.69514526E12, 5013.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69514496E12, 1209.0], [1.69514514E12, 1191.0], [1.69514484E12, 1266.0], [1.69514532E12, 1241.7000000000003], [1.69514502E12, 1210.0], [1.6951452E12, 1264.0], [1.6951449E12, 1232.0], [1.69514538E12, 1222.0], [1.69514508E12, 1222.0], [1.69514478E12, 1261.8000000000002], [1.69514526E12, 1266.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69514496E12, 1413.2000000000007], [1.69514514E12, 1488.7200000000048], [1.69514484E12, 1720.4400000000005], [1.69514532E12, 1467.4799999999996], [1.69514502E12, 1800.1000000000035], [1.6951452E12, 1818.1999999999953], [1.6951449E12, 1371.6699999999996], [1.69514538E12, 1800.349999999983], [1.69514508E12, 1487.2499999999977], [1.69514478E12, 1912.9100000000005], [1.69514526E12, 2340.0800000000017]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69514496E12, 1270.0], [1.69514514E12, 1246.15], [1.69514484E12, 1340.2999999999997], [1.69514532E12, 1307.0], [1.69514502E12, 1278.5], [1.6951452E12, 1331.5999999999995], [1.6951449E12, 1277.0], [1.69514538E12, 1270.75], [1.69514508E12, 1272.25], [1.69514478E12, 1326.05], [1.69514526E12, 1317.85]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69514496E12, 263.0], [1.69514514E12, 264.0], [1.69514484E12, 265.0], [1.69514532E12, 275.0], [1.69514502E12, 264.0], [1.6951452E12, 284.0], [1.6951449E12, 265.0], [1.69514538E12, 272.0], [1.69514508E12, 267.0], [1.69514478E12, 272.0], [1.69514526E12, 277.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69514496E12, 311.0], [1.69514514E12, 304.0], [1.69514484E12, 318.0], [1.69514532E12, 312.0], [1.69514502E12, 306.0], [1.6951452E12, 321.0], [1.6951449E12, 314.0], [1.69514538E12, 310.0], [1.69514508E12, 313.0], [1.69514478E12, 318.0], [1.69514526E12, 320.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69514538E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 297.0, "minX": 3.0, "maxY": 3308.5, "series": [{"data": [[32.0, 417.0], [35.0, 376.0], [34.0, 315.0], [37.0, 366.0], [36.0, 356.0], [39.0, 329.0], [38.0, 327.5], [41.0, 316.0], [40.0, 323.0], [43.0, 318.0], [42.0, 318.5], [45.0, 313.0], [44.0, 316.0], [47.0, 312.0], [46.0, 314.0], [49.0, 313.0], [48.0, 309.0], [3.0, 304.0], [51.0, 311.0], [50.0, 311.0], [53.0, 315.0], [52.0, 312.0], [54.0, 316.5], [55.0, 308.0], [57.0, 313.0], [56.0, 313.0], [61.0, 306.0], [60.0, 317.5], [65.0, 301.0], [72.0, 297.0], [95.0, 322.5], [110.0, 314.0], [17.0, 1130.0], [23.0, 324.0], [26.0, 299.0], [27.0, 320.0], [28.0, 460.5], [29.0, 466.0], [30.0, 324.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 3306.0], [47.0, 3123.0], [95.0, 356.0], [51.0, 320.0], [50.0, 317.0], [110.0, 317.5], [60.0, 3308.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 110.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 155.0, "minX": 3.0, "maxY": 3308.5, "series": [{"data": [[32.0, 417.0], [35.0, 376.0], [34.0, 315.0], [37.0, 366.0], [36.0, 356.0], [39.0, 329.0], [38.0, 327.5], [41.0, 316.0], [40.0, 323.0], [43.0, 318.0], [42.0, 318.5], [45.0, 313.0], [44.0, 316.0], [47.0, 312.0], [46.0, 314.0], [49.0, 313.0], [48.0, 309.0], [3.0, 304.0], [51.0, 311.0], [50.0, 311.0], [53.0, 315.0], [52.0, 312.0], [54.0, 316.5], [55.0, 308.0], [57.0, 313.0], [56.0, 313.0], [61.0, 306.0], [60.0, 317.5], [65.0, 301.0], [72.0, 297.0], [95.0, 322.5], [110.0, 314.0], [17.0, 1130.0], [23.0, 324.0], [26.0, 299.0], [27.0, 320.0], [28.0, 460.5], [29.0, 466.0], [30.0, 324.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[41.0, 3306.0], [47.0, 155.0], [95.0, 356.0], [51.0, 320.0], [50.0, 317.0], [110.0, 317.5], [60.0, 3308.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 110.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.566666666666666, "minX": 1.69514478E12, "maxY": 47.016666666666666, "series": [{"data": [[1.69514496E12, 46.93333333333333], [1.69514514E12, 46.65], [1.69514484E12, 46.833333333333336], [1.69514532E12, 46.86666666666667], [1.69514502E12, 46.833333333333336], [1.6951452E12, 47.016666666666666], [1.6951449E12, 46.88333333333333], [1.69514538E12, 43.03333333333333], [1.69514508E12, 46.93333333333333], [1.69514478E12, 4.566666666666666], [1.69514526E12, 46.95]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69514538E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69514478E12, "maxY": 39.18333333333333, "series": [{"data": [[1.69514496E12, 39.13333333333333], [1.69514514E12, 38.833333333333336], [1.69514484E12, 39.016666666666666], [1.69514532E12, 39.05], [1.69514502E12, 39.016666666666666], [1.6951452E12, 39.18333333333333], [1.6951449E12, 39.06666666666667], [1.69514538E12, 36.06666666666667], [1.69514508E12, 39.11666666666667], [1.69514478E12, 3.6], [1.69514526E12, 38.81666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.69514496E12, 7.85], [1.69514514E12, 7.766666666666667], [1.69514484E12, 7.866666666666666], [1.69514532E12, 7.816666666666666], [1.69514502E12, 7.8], [1.6951452E12, 7.866666666666666], [1.6951449E12, 7.766666666666667], [1.69514538E12, 7.333333333333333], [1.69514508E12, 7.783333333333333], [1.69514478E12, 0.5666666666666667], [1.69514526E12, 7.55]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.6951452E12, 0.03333333333333333], [1.69514526E12, 0.38333333333333336]], "isOverall": false, "label": "403", "isController": false}, {"data": [[1.6951452E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}, {"data": [[1.69514526E12, 0.2]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69514538E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69514478E12, "maxY": 15.716666666666667, "series": [{"data": [[1.69514496E12, 7.816666666666666], [1.69514514E12, 7.766666666666667], [1.69514484E12, 7.8], [1.69514532E12, 7.8], [1.69514502E12, 7.816666666666666], [1.6951452E12, 7.833333333333333], [1.6951449E12, 7.816666666666666], [1.69514538E12, 7.183333333333334], [1.69514508E12, 7.816666666666666], [1.69514478E12, 0.7666666666666667], [1.69514526E12, 7.833333333333333]], "isOverall": false, "label": "Create Booking-success", "isController": false}, {"data": [[1.69514496E12, 7.816666666666666], [1.69514514E12, 7.75], [1.69514484E12, 7.8], [1.69514532E12, 7.833333333333333], [1.69514502E12, 7.8], [1.6951452E12, 7.85], [1.6951449E12, 7.833333333333333], [1.69514538E12, 7.233333333333333], [1.69514508E12, 7.833333333333333], [1.69514478E12, 0.6666666666666666], [1.69514526E12, 7.7]], "isOverall": false, "label": "Update Booking-success", "isController": false}, {"data": [[1.69514496E12, 7.816666666666666], [1.69514514E12, 7.783333333333333], [1.69514484E12, 7.8], [1.69514532E12, 7.783333333333333], [1.69514502E12, 7.8], [1.6951452E12, 7.783333333333333], [1.6951449E12, 7.816666666666666], [1.69514538E12, 7.15], [1.69514508E12, 7.833333333333333], [1.69514478E12, 0.8166666666666667], [1.69514526E12, 7.85]], "isOverall": false, "label": "Token-success", "isController": false}, {"data": [[1.69514496E12, 7.85], [1.69514514E12, 7.766666666666667], [1.69514484E12, 7.866666666666666], [1.69514532E12, 7.816666666666666], [1.69514502E12, 7.8], [1.6951452E12, 7.866666666666666], [1.6951449E12, 7.766666666666667], [1.69514538E12, 7.333333333333333], [1.69514508E12, 7.783333333333333], [1.69514478E12, 0.5666666666666667], [1.69514526E12, 7.55]], "isOverall": false, "label": "Delete Booking-success", "isController": false}, {"data": [[1.6951452E12, 0.016666666666666666], [1.69514526E12, 0.26666666666666666]], "isOverall": false, "label": "Delete Booking-failure", "isController": false}, {"data": [[1.69514526E12, 0.2]], "isOverall": false, "label": "Get Booking-failure", "isController": false}, {"data": [[1.6951452E12, 0.016666666666666666], [1.69514526E12, 0.11666666666666667]], "isOverall": false, "label": "Update Booking-failure", "isController": false}, {"data": [[1.69514496E12, 15.683333333333334], [1.69514514E12, 15.533333333333333], [1.69514484E12, 15.616666666666667], [1.69514532E12, 15.633333333333333], [1.69514502E12, 15.6], [1.6951452E12, 15.716666666666667], [1.6951449E12, 15.6], [1.69514538E12, 14.5], [1.69514508E12, 15.633333333333333], [1.69514478E12, 1.35], [1.69514526E12, 15.433333333333334]], "isOverall": false, "label": "Get Booking-success", "isController": false}, {"data": [[1.6951452E12, 0.016666666666666666]], "isOverall": false, "label": "Token-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69514538E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.69514478E12, "maxY": 47.05, "series": [{"data": [[1.69514496E12, 46.983333333333334], [1.69514514E12, 46.6], [1.69514484E12, 46.88333333333333], [1.69514532E12, 46.86666666666667], [1.69514502E12, 46.81666666666667], [1.6951452E12, 47.05], [1.6951449E12, 46.833333333333336], [1.69514538E12, 43.4], [1.69514508E12, 46.9], [1.69514478E12, 4.166666666666667], [1.69514526E12, 46.36666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6951452E12, 0.05], [1.69514526E12, 0.5833333333333334]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69514538E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

